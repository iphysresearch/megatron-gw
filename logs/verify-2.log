# compared with verify.log, check emebedding and gaussian weight implementation accuracy, focus on trainable parameters registed in override_lr_scheduler
# sigma is different at different tensor parallel partition

using world size: 8, data-parallel-size: 8, tensor-model-parallel size: 1, pipeline-model-parallel size: 1 
using torch.float16 for parameters ...
------------------------ arguments ------------------------
  accumulate_allreduce_grads_in_fp32 .............. False
  adam_beta1 ...................................... 0.9
  adam_beta2 ...................................... 0.999
  adam_eps ........................................ 1e-08
  adlr_autoresume ................................. False
  adlr_autoresume_interval ........................ 1000
  apply_query_key_layer_scaling ................... True
  apply_residual_connection_post_layernorm ........ False
  attention_dropout ............................... 0.1
  attention_softmax_in_fp32 ....................... False
  bert_binary_head ................................ False
  bert_load ....................................... None
  bf16 ............................................ False
  bias_dropout_fusion ............................. True
  bias_gelu_fusion ................................ True
  biencoder_projection_dim ........................ 0
  biencoder_shared_query_context_model ............ False
  block_data_path ................................. None
  checkpoint_activations .......................... False
  checkpoint_num_layers ........................... 1
  clip_grad ....................................... 1.0
  consumed_train_samples .......................... 0
  consumed_valid_samples .......................... 0
  data_impl ....................................... mmap
  data_parallel_size .............................. 8
  data_path ....................................... ['../bigdata/']
  dataloader_type ................................. cyclic
  DDP_impl ........................................ local
  decoder_seq_length .............................. None
  distribute_checkpointed_activations ............. False
  distributed_backend ............................. nccl
  embedding_path .................................. None
  encoder_seq_length .............................. 31
  eod_mask_loss ................................... False
  eval_interval ................................... 1000
  eval_iters ...................................... 1
  evidence_data_path .............................. None
  exit_duration_in_mins ........................... None
  exit_interval ................................... None
  ffn_hidden_size ................................. 8192
  finetune ........................................ False
  fp16 ............................................ True
  fp16_lm_cross_entropy ........................... False
  fp32_residual_connection ........................ False
  global_batch_size ............................... 128
  hidden_dropout .................................. 0.1
  hidden_size ..................................... 2048
  hysteresis ...................................... 2
  ict_head_size ................................... None
  ict_load ........................................ None
  img_dim ......................................... 224
  indexer_batch_size .............................. 128
  indexer_log_interval ............................ 1000
  init_method_std ................................. 0.02
  init_method_xavier_uniform ...................... False
  initial_loss_scale .............................. 4294967296
  kv_channels ..................................... 64
  layernorm_epsilon ............................... 1e-05
  lazy_mpu_init ................................... None
  load ............................................ tmp
  local_rank ...................................... 0
  log_batch_size_to_tensorboard ................... False
  log_interval .................................... 100
  log_learning_rate_to_tensorboard ................ True
  log_loss_scale_to_tensorboard ................... True
  log_memory_to_tensorboard ....................... False
  log_num_zeros_in_grad ........................... False
  log_params_norm ................................. False
  log_timers_to_tensorboard ....................... False
  log_validation_ppl_to_tensorboard ............... False
  loss_scale ...................................... None
  loss_scale_window ............................... 1000
  lr .............................................. 0.0001
  lr_decay_iters .................................. 99000
  lr_decay_samples ................................ None
  lr_decay_style .................................. linear
  lr_warmup_fraction .............................. 0.002
  lr_warmup_iters ................................. 0
  lr_warmup_samples ............................... 0
  make_vocab_size_divisible_by .................... 128
  mask_prob ....................................... 0.15
  masked_softmax_fusion ........................... True
  max_position_embeddings ......................... 31
  merge_file ...................................... None
  micro_batch_size ................................ 16
  min_loss_scale .................................. 1.0
  min_lr .......................................... 1e-05
  mmap_warmup ..................................... False
  no_load_optim ................................... None
  no_load_rng ..................................... None
  no_save_optim ................................... None
  no_save_rng ..................................... None
  num_attention_heads ............................. 32
  num_channels .................................... 3
  num_classes ..................................... 1000
  num_layers ...................................... 24
  num_layers_per_virtual_pipeline_stage ........... None
  num_workers ..................................... 2
  onnx_safe ....................................... None
  openai_gelu ..................................... False
  optimizer ....................................... adam
  override_lr_scheduler ........................... False
  params_dtype .................................... torch.float16
  patch_dim ....................................... 16
  pipeline_model_parallel_size .................... 1
  query_in_block_prob ............................. 0.1
  rampup_batch_size ............................... None
  rank ............................................ 0
  reset_attention_mask ............................ False
  reset_position_ids .............................. False
  retriever_report_topk_accuracies ................ []
  retriever_score_scaling ......................... False
  retriever_seq_length ............................ 256
  sample_rate ..................................... 1.0
  save ............................................ tmp
  save_interval ................................... 10000
  scatter_gather_tensors_in_pipeline .............. True
  seed ............................................ 1234
  segment_length .................................. 2048
  seq_length ...................................... 31
  sgd_momentum .................................... 0.9
  short_seq_prob .................................. 0.1
  split ........................................... 949,50,1
  tensor_model_parallel_size ...................... 1
  tensorboard_dir ................................. None
  tensorboard_log_interval ........................ 1
  tensorboard_queue_size .......................... 1000
  titles_data_path ................................ None
  tokenizer_type .................................. BertWordPieceLowerCase
  train_iters ..................................... 200000
  train_samples ................................... None
  use_checkpoint_lr_scheduler ..................... False
  use_contiguous_buffers_in_ddp ................... False
  use_cpu_initialization .......................... None
  use_one_sent_docs ............................... False
  virtual_pipeline_model_parallel_size ............ None
  vocab_extra_ids ................................. 0
  vocab_file ...................................... None
  weight_decay .................................... 0.01
  world_size ...................................... 8
-------------------- end of arguments ---------------------
setting number of micro-batches to constant 1
> initializing torch distributed ...
> initializing tensor model parallel with size 1
> initializing pipeline model parallel with size 1
> setting random seeds to 1234 ...
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 3952 and data parallel seed: 1234
WARNING: constraints for invoking optimized fused softmax kernel are not met. We default back to unfused kernel invocations.
> compiling and loading fused kernels ...
Detected CUDA files, patching ldflags
Emitting ninja build file /workspace/zhouy/megatron-gw/megatron/fused_kernels/build/build.ninja...
Building extension module scaled_upper_triang_masked_softmax_cuda...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Loading extension module scaled_upper_triang_masked_softmax_cuda...
Detected CUDA files, patching ldflags
Emitting ninja build file /workspace/zhouy/megatron-gw/megatron/fused_kernels/build/build.ninja...
Building extension module scaled_masked_softmax_cuda...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Loading extension module scaled_masked_softmax_cuda...
Detected CUDA files, patching ldflags
Emitting ninja build file /workspace/zhouy/megatron-gw/megatron/fused_kernels/build/build.ninja...
Building extension module fused_mix_prec_layer_norm_cuda...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Loading extension module fused_mix_prec_layer_norm_cuda...
>>> done with compiling and loading fused kernels. Compilation time: 8.136 seconds
time to initialize megatron (seconds): 40.617
[after megatron is initialized] datetime: 2021-12-17 15:09:28 
building BERT model ...
 > number of parameters on (tensor, pipeline) model parallel rank (0, 0): 1217063852
> learning rate decay style: linear
 loading checkpoint from tmp at iteration 20000
model length:1
model:{'language_model': {'embedding': {'word_embeddings': OrderedDict([('weight', tensor([[ 0.0140, -0.0108,  0.0326,  ..., -0.0118, -0.0123,  0.0163],
        [ 0.0087, -0.0047,  0.0284,  ..., -0.0168, -0.0504, -0.0265],
        [ 0.0002, -0.0044,  0.0252,  ...,  0.0367,  0.0341,  0.0030],
        ...,
        [-0.0162,  0.0178,  0.0141,  ...,  0.0055,  0.0122, -0.0110],
        [-0.0188,  0.0230,  0.0140,  ...,  0.0178,  0.0063,  0.0073],
        [ 0.0488,  0.0167,  0.0448,  ..., -0.0435, -0.0290, -0.0218]],
       dtype=torch.float16))]), 'position_embeddings': OrderedDict([('weight', tensor([[ 0.0175,  0.0494,  0.0141,  ..., -0.0046, -0.0525,  0.0111],
        [ 0.0085,  0.0384,  0.0440,  ..., -0.0107, -0.0536, -0.0255],
        [-0.0060, -0.0225,  0.0209,  ..., -0.0049,  0.0168,  0.0063],
        ...,
        [ 0.0211,  0.0825,  0.0551,  ...,  0.0008, -0.0231, -0.0319],
        [ 0.0040,  0.0674, -0.0190,  ..., -0.0140,  0.0037, -0.0012],
        [-0.0331, -0.0041,  0.0374,  ...,  0.0150,  0.0036, -0.0166]],
       dtype=torch.float16))]), 'conv_embeddings': OrderedDict([('weight', tensor([[[-0.0181, -0.0446, -0.0511],
         [ 0.0306,  0.0146, -0.0109],
         [ 0.0267, -0.0357, -0.0080],
         ...,
         [ 0.0136, -0.0214, -0.0219],
         [ 0.0282,  0.0041, -0.0258],
         [-0.0307, -0.0167,  0.0124]],

        [[-0.0130,  0.0197,  0.0294],
         [-0.0171,  0.0134, -0.0540],
         [-0.0348, -0.0110,  0.0257],
         ...,
         [ 0.0053, -0.0131, -0.0197],
         [ 0.0154,  0.0242,  0.0149],
         [ 0.0322,  0.0210,  0.0183]],

        [[-0.0037,  0.0569, -0.0018],
         [-0.0441,  0.0199, -0.0040],
         [ 0.0028, -0.0129,  0.0472],
         ...,
         [-0.0108, -0.0297, -0.0190],
         [ 0.0172,  0.0423,  0.0182],
         [-0.0061,  0.0155, -0.0340]],

        ...,

        [[-0.0004, -0.0105,  0.0154],
         [-0.0163, -0.0067, -0.0053],
         [-0.0064,  0.0009,  0.0288],
         ...,
         [-0.0264,  0.0026, -0.0042],
         [ 0.0004, -0.0081,  0.0161],
         [ 0.0098,  0.0083,  0.0113]],

        [[ 0.0038,  0.0135, -0.0041],
         [ 0.0035,  0.0034,  0.0267],
         [-0.0295,  0.0444,  0.0388],
         ...,
         [-0.0140, -0.0012,  0.0383],
         [-0.0166, -0.0027, -0.0143],
         [-0.0247, -0.0186, -0.0489]],

        [[-0.0123,  0.0245, -0.0047],
         [-0.0224,  0.0153,  0.0107],
         [-0.0182, -0.0001, -0.0085],
         ...,
         [-0.0333, -0.0164, -0.0210],
         [ 0.0619,  0.0229, -0.0176],
         [ 0.0249, -0.0212,  0.0047]]], dtype=torch.float16)), ('bias', tensor([-0.0307,  0.1262, -0.0195, -0.0656, -0.0178,  0.0134,  0.0219, -0.0104,
        -0.0464, -0.0005, -0.0923,  0.0831,  0.0226,  0.0620,  0.0149,  0.0559,
         0.0216,  0.0031,  0.0244,  0.0529,  0.0598,  0.0518,  0.0480,  0.0459,
         0.0582,  0.0480,  0.0441,  0.0531, -0.0215,  0.0806, -0.0218],
       dtype=torch.float16))]), 'conv_layer': OrderedDict([('weight', tensor([[[[ 2.9659e-03,  1.9765e-04,  2.1248e-03, -2.4323e-02, -4.0169e-03,
            6.0768e-03,  6.1989e-03],
          [-5.1975e-05, -4.3449e-03, -2.6760e-03, -4.9896e-02, -1.2579e-03,
            9.5062e-03, -1.3342e-03],
          [ 6.3777e-06,  3.3073e-03, -1.4889e-04,  5.4626e-02,  4.7302e-03,
            4.9210e-04, -2.9831e-03],
          [ 1.3847e-02,  2.6798e-03,  1.4473e-02, -5.5046e-03, -1.8707e-02,
           -1.1301e-04, -1.4313e-02],
          [ 5.5618e-03, -8.8654e-03,  2.4719e-03,  1.0414e-02,  6.0892e-04,
            4.1008e-03, -1.0786e-03],
          [-1.5556e-02, -4.7112e-03, -5.3749e-03, -5.1453e-02, -5.5275e-03,
           -9.2850e-03,  3.5229e-03],
          [-3.9711e-03,  6.5155e-03, -7.4501e-03, -2.5497e-02,  7.9346e-03,
           -1.3618e-03, -3.8891e-03]]]], dtype=torch.float16)), ('bias', tensor([-0.0782], dtype=torch.float16))])}, 'encoder': OrderedDict([('layers.0.input_layernorm.weight', tensor([0.9912, 0.9883, 1.0039,  ..., 1.0078, 1.0029, 1.0010],
       dtype=torch.float16)), ('layers.0.input_layernorm.bias', tensor([-0.0151,  0.0137,  0.0106,  ..., -0.0168, -0.0031, -0.0031],
       dtype=torch.float16)), ('layers.0.self_attention.query_key_value.weight', tensor([[ 0.0133,  0.0439,  0.0380,  ..., -0.0303, -0.0412, -0.0070],
        [ 0.0359,  0.0077,  0.0441,  ..., -0.0172, -0.0180, -0.0228],
        [-0.0391, -0.0378, -0.0035,  ..., -0.0112,  0.0673, -0.0240],
        ...,
        [-0.0151, -0.0199, -0.0065,  ...,  0.0002,  0.0085,  0.0043],
        [ 0.0085,  0.0240,  0.0278,  ..., -0.0132, -0.0338, -0.0067],
        [-0.0066,  0.0260, -0.0075,  ..., -0.0132,  0.0217, -0.0010]],
       dtype=torch.float16)), ('layers.0.self_attention.query_key_value.bias', tensor([ 0.0164, -0.0031, -0.0016,  ...,  0.0185,  0.0458,  0.0612],
       dtype=torch.float16)), ('layers.0.self_attention.gaussian_weight.sigma', tensor([0.8599], dtype=torch.float16)), ('layers.0.self_attention.dense.weight', tensor([[-0.0175, -0.0038, -0.0004,  ...,  0.0084, -0.0098,  0.0058],
        [-0.0016,  0.0086, -0.0102,  ...,  0.0091, -0.0001,  0.0117],
        [-0.0043, -0.0083,  0.0083,  ...,  0.0038, -0.0097, -0.0023],
        ...,
        [-0.0013,  0.0089,  0.0041,  ..., -0.0050, -0.0139,  0.0101],
        [-0.0108, -0.0092,  0.0195,  ...,  0.0024, -0.0150, -0.0032],
        [-0.0017,  0.0056,  0.0027,  ..., -0.0091,  0.0029, -0.0067]],
       dtype=torch.float16)), ('layers.0.self_attention.dense.bias', tensor([ 0.0107,  0.0127,  0.0155,  ..., -0.0130, -0.0121,  0.0030],
       dtype=torch.float16)), ('layers.0.post_attention_layernorm.weight', tensor([0.9917, 0.9790, 0.9629,  ..., 1.0098, 0.9937, 0.9922],
       dtype=torch.float16)), ('layers.0.post_attention_layernorm.bias', tensor([ 0.0576,  0.0872,  0.0766,  ..., -0.0584, -0.0537,  0.0309],
       dtype=torch.float16)), ('layers.0.mlp.dense_h_to_4h.weight', tensor([[-0.0061, -0.0193, -0.0187,  ...,  0.0291, -0.0058, -0.0145],
        [-0.0080,  0.0117, -0.0284,  ...,  0.0037,  0.0088, -0.0092],
        [ 0.0334,  0.0160,  0.0002,  ...,  0.0253, -0.0145, -0.0380],
        ...,
        [-0.0210,  0.0189, -0.0090,  ...,  0.0137, -0.0248,  0.0017],
        [ 0.0089,  0.0057, -0.0220,  ...,  0.0458,  0.0130,  0.0101],
        [ 0.0219, -0.0035, -0.0549,  ..., -0.0226,  0.0239,  0.0074]],
       dtype=torch.float16)), ('layers.0.mlp.dense_h_to_4h.bias', tensor([-0.0314, -0.0240, -0.0301,  ..., -0.0315, -0.0286, -0.0334],
       dtype=torch.float16)), ('layers.0.mlp.dense_4h_to_h.weight', tensor([[-0.0048,  0.0030, -0.0063,  ...,  0.0085, -0.0097,  0.0089],
        [ 0.0074, -0.0043,  0.0041,  ..., -0.0034,  0.0106,  0.0092],
        [ 0.0004,  0.0098,  0.0016,  ...,  0.0085, -0.0012,  0.0042],
        ...,
        [-0.0024,  0.0185,  0.0038,  ..., -0.0088,  0.0026,  0.0059],
        [ 0.0057, -0.0041, -0.0060,  ...,  0.0003, -0.0017, -0.0043],
        [ 0.0118, -0.0090,  0.0035,  ..., -0.0025,  0.0152, -0.0056]],
       dtype=torch.float16)), ('layers.0.mlp.dense_4h_to_h.bias', tensor([ 0.0038, -0.0011, -0.0037,  ...,  0.0016, -0.0031, -0.0038],
       dtype=torch.float16)), ('layers.1.input_layernorm.weight', tensor([1.0039, 1.0107, 1.0029,  ..., 0.9912, 1.0068, 1.0029],
       dtype=torch.float16)), ('layers.1.input_layernorm.bias', tensor([-0.0041, -0.0071, -0.0014,  ...,  0.0066,  0.0037,  0.0118],
       dtype=torch.float16)), ('layers.1.self_attention.query_key_value.weight', tensor([[-0.0111, -0.0599, -0.0211,  ..., -0.0427,  0.0258, -0.0155],
        [ 0.0210,  0.0058, -0.0125,  ...,  0.0277,  0.0043, -0.0136],
        [-0.0290, -0.0157,  0.0038,  ..., -0.0100,  0.0007,  0.0147],
        ...,
        [ 0.0296,  0.0130, -0.0284,  ..., -0.0188,  0.0273, -0.0128],
        [ 0.0052,  0.0119, -0.0147,  ..., -0.0336,  0.0223,  0.0175],
        [ 0.0289, -0.0152, -0.0197,  ..., -0.0034, -0.0009, -0.0111]],
       dtype=torch.float16)), ('layers.1.self_attention.query_key_value.bias', tensor([-0.0006, -0.0093, -0.0019,  ...,  0.0026, -0.0040, -0.0004],
       dtype=torch.float16)), ('layers.1.self_attention.gaussian_weight.sigma', tensor([1.4062], dtype=torch.float16)), ('layers.1.self_attention.dense.weight', tensor([[ 1.3771e-02,  1.3809e-03, -4.2038e-03,  ..., -1.5930e-02,
         -1.7157e-03,  2.2755e-03],
        [ 1.4748e-02, -1.7624e-03,  6.3171e-03,  ..., -7.1526e-03,
          1.0468e-02, -3.4142e-03],
        [ 1.3138e-02, -1.2413e-02,  1.5778e-02,  ..., -6.6638e-05,
         -6.1417e-03, -5.6038e-03],
        ...,
        [-6.3095e-03, -5.7220e-03, -7.5989e-03,  ..., -6.9237e-03,
          5.3787e-03,  1.3115e-02],
        [-7.6141e-03,  1.7338e-03,  1.2226e-03,  ..., -1.1749e-02,
         -1.0811e-02, -5.8289e-03],
        [-2.9707e-04,  1.6769e-02, -4.0340e-04,  ..., -7.2861e-04,
          8.4000e-03,  4.2000e-03]], dtype=torch.float16)), ('layers.1.self_attention.dense.bias', tensor([ 0.0053, -0.0040,  0.0022,  ..., -0.0019, -0.0011, -0.0039],
       dtype=torch.float16)), ('layers.1.post_attention_layernorm.weight', tensor([1.0166, 1.0342, 1.0049,  ..., 1.0078, 1.0088, 1.0020],
       dtype=torch.float16)), ('layers.1.post_attention_layernorm.bias', tensor([ 0.0104, -0.0376, -0.0058,  ..., -0.0035,  0.0096, -0.0002],
       dtype=torch.float16)), ('layers.1.mlp.dense_h_to_4h.weight', tensor([[-0.0149, -0.0091, -0.0115,  ...,  0.0262, -0.0231, -0.0004],
        [-0.0260,  0.0255, -0.0153,  ...,  0.0094, -0.0021, -0.0148],
        [-0.0110, -0.0499,  0.0264,  ...,  0.0226, -0.0096,  0.0323],
        ...,
        [-0.0153,  0.0090, -0.0056,  ..., -0.0143, -0.0249,  0.0327],
        [-0.0079,  0.0368,  0.0493,  ...,  0.0004,  0.0317, -0.0249],
        [-0.0196, -0.0235,  0.0072,  ...,  0.0378, -0.0036, -0.0160]],
       dtype=torch.float16)), ('layers.1.mlp.dense_h_to_4h.bias', tensor([-6.5308e-03, -1.4420e-02,  1.6868e-05,  ..., -1.3336e-02,
        -1.6937e-02, -8.3084e-03], dtype=torch.float16)), ('layers.1.mlp.dense_4h_to_h.weight', tensor([[ 0.0102, -0.0023,  0.0103,  ..., -0.0095, -0.0033,  0.0006],
        [ 0.0017,  0.0054, -0.0044,  ...,  0.0096, -0.0023,  0.0023],
        [-0.0060,  0.0066, -0.0066,  ..., -0.0024, -0.0043, -0.0110],
        ...,
        [ 0.0023, -0.0164,  0.0101,  ..., -0.0072,  0.0077,  0.0002],
        [ 0.0087,  0.0027, -0.0034,  ..., -0.0087,  0.0088,  0.0022],
        [ 0.0029, -0.0123, -0.0008,  ..., -0.0017,  0.0020,  0.0028]],
       dtype=torch.float16)), ('layers.1.mlp.dense_4h_to_h.bias', tensor([ 0.0002,  0.0006,  0.0042,  ..., -0.0004,  0.0004, -0.0026],
       dtype=torch.float16)), ('layers.2.input_layernorm.weight', tensor([1.0693, 1.0537, 1.0869,  ..., 0.9961, 1.0430, 1.0088],
       dtype=torch.float16)), ('layers.2.input_layernorm.bias', tensor([-0.0038,  0.0195, -0.0120,  ...,  0.0180, -0.0039, -0.0100],
       dtype=torch.float16)), ('layers.2.self_attention.query_key_value.weight', tensor([[-0.0094,  0.0161,  0.0258,  ...,  0.0117,  0.0115, -0.0094],
        [-0.0016, -0.0154,  0.0061,  ...,  0.0005, -0.0230, -0.0364],
        [ 0.0210,  0.0173,  0.0010,  ..., -0.0297, -0.0077,  0.0330],
        ...,
        [ 0.0054, -0.0116, -0.0286,  ..., -0.0222, -0.0045, -0.0291],
        [-0.0067, -0.0271, -0.0171,  ...,  0.0457,  0.0004,  0.0375],
        [ 0.0042, -0.0050,  0.0247,  ...,  0.0149,  0.0002,  0.0135]],
       dtype=torch.float16)), ('layers.2.self_attention.query_key_value.bias', tensor([-2.4719e-03, -3.8185e-03,  3.0184e-04,  ..., -2.1763e-03,
         3.1710e-05, -3.5000e-03], dtype=torch.float16)), ('layers.2.self_attention.gaussian_weight.sigma', tensor([1.3242], dtype=torch.float16)), ('layers.2.self_attention.dense.weight', tensor([[-0.0045,  0.0076, -0.0044,  ...,  0.0109, -0.0065,  0.0009],
        [-0.0011, -0.0112, -0.0003,  ..., -0.0106,  0.0051, -0.0030],
        [-0.0068, -0.0060,  0.0096,  ...,  0.0101,  0.0132,  0.0097],
        ...,
        [-0.0055,  0.0051,  0.0165,  ..., -0.0104, -0.0022, -0.0079],
        [ 0.0121,  0.0043, -0.0039,  ..., -0.0075,  0.0015,  0.0077],
        [ 0.0021, -0.0042,  0.0137,  ...,  0.0056, -0.0089, -0.0154]],
       dtype=torch.float16)), ('layers.2.self_attention.dense.bias', tensor([ 0.0006, -0.0008, -0.0008,  ..., -0.0029, -0.0003,  0.0011],
       dtype=torch.float16)), ('layers.2.post_attention_layernorm.weight', tensor([1.0146, 1.0146, 1.0010,  ..., 0.9888, 1.0000, 1.0049],
       dtype=torch.float16)), ('layers.2.post_attention_layernorm.bias', tensor([ 1.9547e-02, -1.1147e-02,  9.3155e-03,  ...,  3.4988e-05,
         1.1835e-03, -9.2773e-03], dtype=torch.float16)), ('layers.2.mlp.dense_h_to_4h.weight', tensor([[-0.0371, -0.0022, -0.0085,  ...,  0.0229, -0.0238,  0.0122],
        [ 0.0149,  0.0235,  0.0334,  ..., -0.0053, -0.0367, -0.0492],
        [ 0.0063,  0.0063, -0.0159,  ..., -0.0168, -0.0140, -0.0090],
        ...,
        [-0.0078, -0.0025, -0.0408,  ...,  0.0272,  0.0058, -0.0016],
        [-0.0158, -0.0047,  0.0164,  ...,  0.0153,  0.0088, -0.0135],
        [-0.0385, -0.0166, -0.0187,  ...,  0.0117,  0.0175, -0.0292]],
       dtype=torch.float16)), ('layers.2.mlp.dense_h_to_4h.bias', tensor([-0.0036,  0.0048, -0.0018,  ..., -0.0018, -0.0055, -0.0054],
       dtype=torch.float16)), ('layers.2.mlp.dense_4h_to_h.weight', tensor([[ 0.0033, -0.0095, -0.0040,  ...,  0.0126,  0.0016,  0.0046],
        [ 0.0017, -0.0011, -0.0058,  ..., -0.0072,  0.0011, -0.0011],
        [-0.0040, -0.0009, -0.0010,  ..., -0.0074,  0.0007, -0.0180],
        ...,
        [-0.0046, -0.0042,  0.0050,  ..., -0.0025, -0.0005,  0.0004],
        [ 0.0086,  0.0012,  0.0105,  ...,  0.0125, -0.0001,  0.0007],
        [-0.0057, -0.0013,  0.0117,  ..., -0.0042,  0.0039, -0.0053]],
       dtype=torch.float16)), ('layers.2.mlp.dense_4h_to_h.bias', tensor([-0.0003,  0.0025, -0.0048,  ..., -0.0034, -0.0014, -0.0024],
       dtype=torch.float16)), ('layers.3.input_layernorm.weight', tensor([1.0254, 1.0215, 1.0713,  ..., 1.0176, 1.0361, 1.0186],
       dtype=torch.float16)), ('layers.3.input_layernorm.bias', tensor([-0.0044, -0.0042, -0.0039,  ..., -0.0016, -0.0023, -0.0032],
       dtype=torch.float16)), ('layers.3.self_attention.query_key_value.weight', tensor([[ 9.9182e-05,  1.5427e-02,  1.2047e-02,  ...,  1.6785e-02,
          1.3031e-02, -3.5828e-02],
        [-2.7786e-02,  6.7749e-02,  5.9204e-03,  ...,  1.2772e-02,
         -1.3641e-02, -1.1169e-02],
        [-3.9959e-04, -2.1164e-02, -5.7144e-03,  ...,  3.5614e-02,
          4.2844e-04,  1.1147e-02],
        ...,
        [-3.2806e-02,  4.8676e-03,  3.3905e-02,  ..., -1.7868e-02,
         -3.7689e-03,  1.8066e-02],
        [-2.0638e-03,  2.4490e-02,  6.9122e-03,  ..., -2.4628e-02,
          1.0933e-02,  2.3972e-02],
        [-9.3765e-03,  1.0437e-02,  2.5528e-02,  ...,  4.6005e-03,
          1.2283e-02,  2.6550e-03]], dtype=torch.float16)), ('layers.3.self_attention.query_key_value.bias', tensor([-0.0040, -0.0083, -0.0094,  ..., -0.0010,  0.0033, -0.0008],
       dtype=torch.float16)), ('layers.3.self_attention.gaussian_weight.sigma', tensor([1.3545], dtype=torch.float16)), ('layers.3.self_attention.dense.weight', tensor([[-0.0007, -0.0060,  0.0010,  ..., -0.0069,  0.0027,  0.0046],
        [ 0.0137,  0.0079, -0.0051,  ..., -0.0015, -0.0001, -0.0020],
        [-0.0119,  0.0024,  0.0141,  ..., -0.0043,  0.0038,  0.0091],
        ...,
        [-0.0052, -0.0019, -0.0046,  ...,  0.0057, -0.0074, -0.0044],
        [ 0.0038,  0.0069,  0.0005,  ..., -0.0029,  0.0041, -0.0026],
        [ 0.0095,  0.0071,  0.0066,  ..., -0.0008,  0.0043, -0.0087]],
       dtype=torch.float16)), ('layers.3.self_attention.dense.bias', tensor([-0.0012,  0.0025, -0.0020,  ..., -0.0033, -0.0001,  0.0015],
       dtype=torch.float16)), ('layers.3.post_attention_layernorm.weight', tensor([1.0107, 0.9980, 1.0078,  ..., 1.0039, 0.9995, 1.0049],
       dtype=torch.float16)), ('layers.3.post_attention_layernorm.bias', tensor([ 0.0126, -0.0001,  0.0122,  ..., -0.0078, -0.0025, -0.0073],
       dtype=torch.float16)), ('layers.3.mlp.dense_h_to_4h.weight', tensor([[ 0.0039, -0.0213, -0.0192,  ...,  0.0066, -0.0030, -0.0222],
        [-0.0389,  0.0102,  0.0027,  ..., -0.0119,  0.0502,  0.0331],
        [ 0.0306,  0.0077,  0.0033,  ...,  0.0150,  0.0034, -0.0342],
        ...,
        [-0.0104, -0.0562,  0.0035,  ..., -0.0188, -0.0062,  0.0062],
        [ 0.0177,  0.0159,  0.0154,  ...,  0.0500,  0.0147,  0.0076],
        [-0.0228,  0.0014,  0.0362,  ..., -0.0309, -0.0374,  0.0189]],
       dtype=torch.float16)), ('layers.3.mlp.dense_h_to_4h.bias', tensor([-0.0052, -0.0032,  0.0007,  ..., -0.0125,  0.0002, -0.0035],
       dtype=torch.float16)), ('layers.3.mlp.dense_4h_to_h.weight', tensor([[ 0.0121, -0.0013, -0.0021,  ...,  0.0117,  0.0073,  0.0022],
        [-0.0058,  0.0011,  0.0061,  ...,  0.0006,  0.0044, -0.0012],
        [-0.0054,  0.0072,  0.0016,  ..., -0.0025,  0.0011,  0.0105],
        ...,
        [ 0.0041, -0.0039,  0.0059,  ...,  0.0036,  0.0031, -0.0071],
        [ 0.0023, -0.0070,  0.0033,  ...,  0.0002, -0.0037,  0.0008],
        [-0.0041,  0.0006, -0.0018,  ...,  0.0048,  0.0002, -0.0080]],
       dtype=torch.float16)), ('layers.3.mlp.dense_4h_to_h.bias', tensor([-0.0003,  0.0023, -0.0047,  ..., -0.0031,  0.0005,  0.0025],
       dtype=torch.float16)), ('layers.4.input_layernorm.weight', tensor([1.0332, 1.0332, 1.0498,  ..., 1.0107, 1.0146, 1.0176],
       dtype=torch.float16)), ('layers.4.input_layernorm.bias', tensor([-0.0151,  0.0024, -0.0073,  ...,  0.0019, -0.0112, -0.0041],
       dtype=torch.float16)), ('layers.4.self_attention.query_key_value.weight', tensor([[ 0.0215,  0.0203, -0.0164,  ..., -0.0195, -0.0124,  0.0186],
        [ 0.0381,  0.0049,  0.0089,  ..., -0.0120,  0.0338,  0.0125],
        [ 0.0090,  0.0032, -0.0307,  ..., -0.0030, -0.0016, -0.0013],
        ...,
        [ 0.0034, -0.0025,  0.0161,  ...,  0.0192,  0.0263,  0.0540],
        [-0.0097,  0.0110, -0.0010,  ..., -0.0294,  0.0017,  0.0240],
        [-0.0670, -0.0155, -0.0300,  ...,  0.0241, -0.0037,  0.0353]],
       dtype=torch.float16)), ('layers.4.self_attention.query_key_value.bias', tensor([ 0.0066, -0.0178,  0.0066,  ...,  0.0049, -0.0031,  0.0030],
       dtype=torch.float16)), ('layers.4.self_attention.gaussian_weight.sigma', tensor([1.3994], dtype=torch.float16)), ('layers.4.self_attention.dense.weight', tensor([[ 0.0101,  0.0070, -0.0028,  ..., -0.0057,  0.0055,  0.0002],
        [ 0.0086, -0.0052,  0.0062,  ..., -0.0039, -0.0014, -0.0096],
        [-0.0013,  0.0031, -0.0024,  ..., -0.0032,  0.0020, -0.0019],
        ...,
        [ 0.0039, -0.0029,  0.0031,  ..., -0.0037, -0.0016,  0.0042],
        [ 0.0066, -0.0017, -0.0024,  ..., -0.0013,  0.0007, -0.0023],
        [-0.0063, -0.0051,  0.0044,  ...,  0.0090,  0.0044,  0.0063]],
       dtype=torch.float16)), ('layers.4.self_attention.dense.bias', tensor([-0.0019,  0.0010,  0.0012,  ..., -0.0049,  0.0003, -0.0019],
       dtype=torch.float16)), ('layers.4.post_attention_layernorm.weight', tensor([1.0010, 1.0176, 1.0078,  ..., 1.0010, 0.9985, 1.0107],
       dtype=torch.float16)), ('layers.4.post_attention_layernorm.bias', tensor([-0.0024, -0.0019,  0.0123,  ..., -0.0136,  0.0010,  0.0010],
       dtype=torch.float16)), ('layers.4.mlp.dense_h_to_4h.weight', tensor([[-3.1708e-02, -1.7120e-02,  2.4323e-02,  ...,  3.2227e-02,
         -1.1330e-03, -1.1154e-02],
        [ 1.2207e-02,  3.3588e-03, -2.2566e-04,  ..., -2.4582e-02,
         -1.7776e-02,  8.4610e-03],
        [-1.4511e-02,  3.9368e-02, -1.1192e-02,  ..., -1.6846e-02,
         -1.8358e-04,  2.0157e-02],
        ...,
        [ 1.7487e-02,  6.9962e-03,  2.0691e-02,  ...,  2.0264e-02,
          3.9041e-05, -2.3010e-02],
        [ 1.1620e-02, -4.0131e-02,  2.3163e-02,  ..., -1.4091e-02,
          2.8534e-02, -2.8286e-03],
        [-2.8896e-03, -2.6291e-02, -7.4615e-03,  ...,  5.9242e-03,
          1.3901e-02, -2.3376e-02]], dtype=torch.float16)), ('layers.4.mlp.dense_h_to_4h.bias', tensor([-0.0078, -0.0070, -0.0059,  ..., -0.0022, -0.0068, -0.0049],
       dtype=torch.float16)), ('layers.4.mlp.dense_4h_to_h.weight', tensor([[ 0.0059, -0.0121,  0.0038,  ..., -0.0061,  0.0037,  0.0038],
        [ 0.0116, -0.0070,  0.0086,  ..., -0.0036,  0.0005,  0.0034],
        [-0.0062, -0.0017, -0.0022,  ...,  0.0037,  0.0005, -0.0106],
        ...,
        [ 0.0016,  0.0064, -0.0003,  ...,  0.0036, -0.0032,  0.0038],
        [ 0.0059,  0.0007,  0.0049,  ..., -0.0019, -0.0015,  0.0066],
        [-0.0034, -0.0021, -0.0052,  ...,  0.0096,  0.0059,  0.0119]],
       dtype=torch.float16)), ('layers.4.mlp.dense_4h_to_h.bias', tensor([ 0.0004,  0.0015,  0.0003,  ..., -0.0051,  0.0021, -0.0018],
       dtype=torch.float16)), ('layers.5.input_layernorm.weight', tensor([1.0166, 1.0264, 1.0254,  ..., 0.9951, 1.0078, 1.0186],
       dtype=torch.float16)), ('layers.5.input_layernorm.bias', tensor([-0.0044, -0.0049,  0.0081,  ...,  0.0073, -0.0023, -0.0038],
       dtype=torch.float16)), ('layers.5.self_attention.query_key_value.weight', tensor([[ 0.0013,  0.0105, -0.0034,  ..., -0.0167, -0.0179,  0.0283],
        [-0.0111,  0.0205,  0.0132,  ...,  0.0395, -0.0287, -0.0010],
        [-0.0060,  0.0013, -0.0330,  ..., -0.0090,  0.0301,  0.0071],
        ...,
        [ 0.0064,  0.0324, -0.0039,  ...,  0.0211,  0.0018, -0.0125],
        [ 0.0188, -0.0356,  0.0163,  ..., -0.0133, -0.0142,  0.0167],
        [ 0.0154, -0.0223, -0.0020,  ...,  0.0008, -0.0095,  0.0178]],
       dtype=torch.float16)), ('layers.5.self_attention.query_key_value.bias', tensor([-0.0023, -0.0058,  0.0036,  ..., -0.0010,  0.0010, -0.0006],
       dtype=torch.float16)), ('layers.5.self_attention.gaussian_weight.sigma', tensor([1.1465], dtype=torch.float16)), ('layers.5.self_attention.dense.weight', tensor([[-5.2910e-03,  3.9043e-03, -2.2774e-03,  ..., -5.6992e-03,
         -3.5572e-03, -1.8778e-03],
        [ 8.7500e-04,  5.1651e-03, -4.2343e-03,  ..., -2.2964e-03,
          6.6996e-05, -3.2578e-03],
        [-1.0147e-03, -6.9427e-03,  4.3831e-03,  ..., -5.9128e-03,
          2.0847e-03,  2.3308e-03],
        ...,
        [ 3.0403e-03,  4.6883e-03,  1.7285e-05,  ..., -8.0919e-04,
          7.6981e-03,  6.6719e-03],
        [-5.5809e-03, -8.2321e-03,  3.7670e-03,  ..., -2.7637e-03,
          7.1106e-03, -9.2316e-04],
        [ 1.3718e-02, -7.1678e-03,  6.1493e-03,  ..., -5.0354e-03,
          2.7065e-03,  3.1128e-03]], dtype=torch.float16)), ('layers.5.self_attention.dense.bias', tensor([-0.0014, -0.0019, -0.0035,  ..., -0.0053, -0.0002, -0.0028],
       dtype=torch.float16)), ('layers.5.post_attention_layernorm.weight', tensor([1.0059, 1.0088, 1.0254,  ..., 1.0010, 0.9941, 1.0117],
       dtype=torch.float16)), ('layers.5.post_attention_layernorm.bias', tensor([ 0.0011,  0.0045,  0.0153,  ..., -0.0094,  0.0023,  0.0013],
       dtype=torch.float16)), ('layers.5.mlp.dense_h_to_4h.weight', tensor([[-8.9417e-03,  2.6123e-02, -3.9787e-03,  ..., -2.3926e-02,
         -1.1757e-02,  6.8045e-04],
        [-1.5991e-02, -1.3535e-02, -4.0222e-02,  ..., -6.7055e-05,
          1.1642e-02, -2.0187e-02],
        [-3.2623e-02, -3.9398e-02, -3.1082e-02,  ..., -2.7176e-02,
         -8.7662e-03, -1.7014e-02],
        ...,
        [-1.1497e-02,  8.6308e-04,  2.4765e-02,  ..., -1.8372e-02,
         -1.6129e-02,  2.0233e-02],
        [-1.4938e-02, -8.8882e-03, -1.4526e-02,  ..., -2.3556e-03,
          2.2110e-02, -4.4281e-02],
        [-3.4210e-02, -3.1376e-03, -1.7471e-02,  ..., -2.8763e-03,
         -9.1248e-03, -1.2177e-02]], dtype=torch.float16)), ('layers.5.mlp.dense_h_to_4h.bias', tensor([-0.0042, -0.0002, -0.0049,  ..., -0.0021, -0.0077, -0.0064],
       dtype=torch.float16)), ('layers.5.mlp.dense_4h_to_h.weight', tensor([[ 0.0005,  0.0166, -0.0037,  ...,  0.0132,  0.0098,  0.0022],
        [-0.0002,  0.0165, -0.0049,  ...,  0.0102,  0.0012, -0.0011],
        [-0.0036,  0.0093,  0.0070,  ..., -0.0012, -0.0023,  0.0040],
        ...,
        [-0.0007,  0.0028, -0.0055,  ...,  0.0020,  0.0008,  0.0004],
        [ 0.0085, -0.0058, -0.0020,  ...,  0.0055,  0.0087,  0.0006],
        [ 0.0084,  0.0005,  0.0062,  ...,  0.0067,  0.0004, -0.0007]],
       dtype=torch.float16)), ('layers.5.mlp.dense_4h_to_h.bias', tensor([-0.0025, -0.0035, -0.0017,  ..., -0.0048,  0.0003, -0.0009],
       dtype=torch.float16)), ('layers.6.input_layernorm.weight', tensor([1.0303, 1.0332, 1.0957,  ..., 1.0176, 1.0371, 1.0225],
       dtype=torch.float16)), ('layers.6.input_layernorm.bias', tensor([-0.0055, -0.0024,  0.0049,  ...,  0.0018, -0.0025, -0.0060],
       dtype=torch.float16)), ('layers.6.self_attention.query_key_value.weight', tensor([[-0.0157, -0.0133, -0.0202,  ..., -0.0142, -0.0286, -0.0153],
        [ 0.0198, -0.0586, -0.0220,  ...,  0.0274, -0.0288,  0.0029],
        [-0.0167, -0.0196, -0.0254,  ...,  0.0385, -0.0005, -0.0212],
        ...,
        [-0.0274, -0.0019, -0.0005,  ...,  0.0069,  0.0371,  0.0178],
        [ 0.0209, -0.0154,  0.0049,  ...,  0.0145,  0.0141,  0.0010],
        [-0.0245, -0.0096, -0.0228,  ...,  0.0082, -0.0082,  0.0067]],
       dtype=torch.float16)), ('layers.6.self_attention.query_key_value.bias', tensor([ 0.0104, -0.0071,  0.0008,  ...,  0.0027, -0.0005, -0.0044],
       dtype=torch.float16)), ('layers.6.self_attention.gaussian_weight.sigma', tensor([1.1836], dtype=torch.float16)), ('layers.6.self_attention.dense.weight', tensor([[-0.0120,  0.0043,  0.0150,  ...,  0.0052, -0.0079, -0.0033],
        [ 0.0148,  0.0147,  0.0051,  ..., -0.0014,  0.0048, -0.0038],
        [-0.0011, -0.0216,  0.0034,  ..., -0.0069,  0.0066,  0.0166],
        ...,
        [ 0.0016,  0.0096,  0.0040,  ..., -0.0040, -0.0052, -0.0006],
        [-0.0089,  0.0169,  0.0180,  ..., -0.0064, -0.0133,  0.0151],
        [-0.0013, -0.0193, -0.0256,  ...,  0.0052,  0.0143,  0.0069]],
       dtype=torch.float16)), ('layers.6.self_attention.dense.bias', tensor([-0.0040,  0.0021, -0.0025,  ..., -0.0045, -0.0032,  0.0001],
       dtype=torch.float16)), ('layers.6.post_attention_layernorm.weight', tensor([1.0059, 1.0078, 1.0215,  ..., 1.0010, 1.0010, 1.0127],
       dtype=torch.float16)), ('layers.6.post_attention_layernorm.bias', tensor([-0.0049, -0.0074,  0.0006,  ..., -0.0080,  0.0024,  0.0020],
       dtype=torch.float16)), ('layers.6.mlp.dense_h_to_4h.weight', tensor([[ 0.0247, -0.0024,  0.0183,  ..., -0.0043,  0.0075,  0.0416],
        [ 0.0351,  0.0220, -0.0242,  ..., -0.0200, -0.0505, -0.0136],
        [-0.0600,  0.0357, -0.0580,  ...,  0.0461,  0.0033,  0.0082],
        ...,
        [-0.0240,  0.0287, -0.0094,  ...,  0.0124, -0.0036,  0.0162],
        [ 0.0266,  0.0014, -0.0107,  ...,  0.0098, -0.0162, -0.0291],
        [-0.0064, -0.0501,  0.0162,  ...,  0.0071,  0.0208, -0.0045]],
       dtype=torch.float16)), ('layers.6.mlp.dense_h_to_4h.bias', tensor([-0.0071, -0.0019, -0.0064,  ..., -0.0059, -0.0094, -0.0009],
       dtype=torch.float16)), ('layers.6.mlp.dense_4h_to_h.weight', tensor([[ 0.0007, -0.0045,  0.0071,  ..., -0.0048, -0.0022,  0.0068],
        [ 0.0089,  0.0047, -0.0010,  ..., -0.0128,  0.0038, -0.0043],
        [-0.0125, -0.0011,  0.0044,  ...,  0.0022, -0.0049,  0.0064],
        ...,
        [-0.0025,  0.0085,  0.0006,  ...,  0.0031,  0.0015,  0.0033],
        [-0.0013, -0.0041,  0.0077,  ...,  0.0077, -0.0084,  0.0067],
        [-0.0053,  0.0086,  0.0027,  ..., -0.0067, -0.0025,  0.0057]],
       dtype=torch.float16)), ('layers.6.mlp.dense_4h_to_h.bias', tensor([-0.0020,  0.0024, -0.0018,  ..., -0.0030, -0.0019, -0.0011],
       dtype=torch.float16)), ('layers.7.input_layernorm.weight', tensor([1.0352, 1.0596, 1.0898,  ..., 1.0332, 1.0479, 1.0439],
       dtype=torch.float16)), ('layers.7.input_layernorm.bias', tensor([ 0.0007, -0.0039, -0.0013,  ..., -0.0021,  0.0004, -0.0038],
       dtype=torch.float16)), ('layers.7.self_attention.query_key_value.weight', tensor([[-0.0326,  0.0132,  0.0088,  ..., -0.0275, -0.0181, -0.0366],
        [-0.0138, -0.0021, -0.0163,  ..., -0.0557, -0.0054,  0.0009],
        [-0.0110, -0.0251, -0.0021,  ...,  0.0056, -0.0173, -0.0313],
        ...,
        [ 0.0179, -0.0323,  0.0224,  ..., -0.0162,  0.0046,  0.0141],
        [-0.0149,  0.0290,  0.0117,  ..., -0.0185,  0.0119, -0.0567],
        [ 0.0359, -0.0912, -0.0137,  ..., -0.0130, -0.0042,  0.0328]],
       dtype=torch.float16)), ('layers.7.self_attention.query_key_value.bias', tensor([-0.0097, -0.0081,  0.0032,  ...,  0.0024, -0.0037,  0.0009],
       dtype=torch.float16)), ('layers.7.self_attention.gaussian_weight.sigma', tensor([1.0889], dtype=torch.float16)), ('layers.7.self_attention.dense.weight', tensor([[ 2.3842e-03,  3.0708e-03,  2.9030e-03,  ..., -9.5825e-03,
          4.7112e-03, -6.9084e-03],
        [ 5.7182e-03, -6.8398e-03,  1.0933e-02,  ...,  8.3160e-03,
         -1.4496e-03,  2.3895e-02],
        [-1.3969e-02, -1.8890e-02,  2.0569e-02,  ..., -6.3744e-03,
          1.7710e-03,  1.6769e-02],
        ...,
        [-1.1986e-02,  2.2526e-03,  1.2665e-02,  ...,  6.6299e-03,
          3.1281e-03,  2.1774e-02],
        [-8.4610e-03,  2.6455e-03, -3.7611e-05,  ..., -2.1561e-02,
         -9.1019e-03, -2.0889e-02],
        [ 1.1818e-02,  2.6951e-03,  2.7237e-03,  ...,  4.5815e-03,
          4.5700e-03, -1.4511e-02]], dtype=torch.float16)), ('layers.7.self_attention.dense.bias', tensor([-0.0034,  0.0014, -0.0046,  ..., -0.0045,  0.0026,  0.0018],
       dtype=torch.float16)), ('layers.7.post_attention_layernorm.weight', tensor([1.0049, 1.0117, 1.0176,  ..., 1.0107, 0.9971, 1.0059],
       dtype=torch.float16)), ('layers.7.post_attention_layernorm.bias', tensor([-0.0083, -0.0088,  0.0081,  ..., -0.0130, -0.0065,  0.0105],
       dtype=torch.float16)), ('layers.7.mlp.dense_h_to_4h.weight', tensor([[-0.0155, -0.0059,  0.0248,  ...,  0.0065, -0.0168, -0.0228],
        [-0.0329,  0.0143,  0.0058,  ..., -0.0147, -0.0072,  0.0155],
        [ 0.0025, -0.0402, -0.0027,  ...,  0.0060,  0.0163,  0.0271],
        ...,
        [-0.0208,  0.0301, -0.0350,  ...,  0.0025,  0.0160, -0.0046],
        [-0.0282,  0.0015,  0.0047,  ..., -0.0095,  0.0207,  0.0344],
        [ 0.0420,  0.0130, -0.0048,  ..., -0.0299,  0.0233, -0.0156]],
       dtype=torch.float16)), ('layers.7.mlp.dense_h_to_4h.bias', tensor([-0.0055, -0.0028, -0.0015,  ..., -0.0027, -0.0106, -0.0101],
       dtype=torch.float16)), ('layers.7.mlp.dense_4h_to_h.weight', tensor([[-0.0002,  0.0069, -0.0032,  ..., -0.0074,  0.0047,  0.0015],
        [-0.0031,  0.0008, -0.0005,  ...,  0.0064,  0.0084,  0.0004],
        [ 0.0013,  0.0115,  0.0017,  ...,  0.0037, -0.0071, -0.0068],
        ...,
        [ 0.0027,  0.0029, -0.0051,  ..., -0.0064, -0.0010, -0.0021],
        [-0.0002, -0.0028, -0.0061,  ...,  0.0017,  0.0081,  0.0028],
        [-0.0044, -0.0026, -0.0016,  ...,  0.0026,  0.0049,  0.0069]],
       dtype=torch.float16)), ('layers.7.mlp.dense_4h_to_h.bias', tensor([-0.0015,  0.0024, -0.0026,  ..., -0.0032,  0.0019,  0.0019],
       dtype=torch.float16)), ('layers.8.input_layernorm.weight', tensor([1.0195, 1.0361, 1.0566,  ..., 1.0127, 1.0303, 1.0322],
       dtype=torch.float16)), ('layers.8.input_layernorm.bias', tensor([-0.0026,  0.0062, -0.0002,  ...,  0.0037,  0.0073,  0.0009],
       dtype=torch.float16)), ('layers.8.self_attention.query_key_value.weight', tensor([[-1.4009e-03, -1.0353e-02, -7.3576e-04,  ...,  1.0117e-02,
          1.8625e-03, -2.5711e-03],
        [-1.3420e-02, -1.3512e-02, -1.0124e-02,  ...,  1.0258e-04,
         -4.9622e-02, -1.9436e-03],
        [-2.9709e-02,  2.6764e-02, -6.2168e-05,  ..., -7.1259e-03,
         -1.0811e-02, -2.8305e-02],
        ...,
        [ 3.2978e-03, -1.9928e-02, -2.7130e-02,  ...,  2.6688e-02,
         -1.2039e-02,  3.6896e-02],
        [ 2.0691e-02, -2.7866e-03,  1.7258e-02,  ..., -9.6741e-03,
         -1.2674e-03,  2.9678e-03],
        [ 6.2904e-03, -5.8197e-02,  1.2566e-02,  ...,  4.5929e-03,
          9.8343e-03, -5.3444e-03]], dtype=torch.float16)), ('layers.8.self_attention.query_key_value.bias', tensor([-0.0102, -0.0107,  0.0099,  ...,  0.0026,  0.0038, -0.0006],
       dtype=torch.float16)), ('layers.8.self_attention.gaussian_weight.sigma', tensor([1.1074], dtype=torch.float16)), ('layers.8.self_attention.dense.weight', tensor([[ 0.0075, -0.0046, -0.0166,  ...,  0.0012, -0.0124, -0.0013],
        [ 0.0014,  0.0034, -0.0084,  ...,  0.0107, -0.0067, -0.0002],
        [ 0.0009, -0.0066, -0.0111,  ...,  0.0124, -0.0112,  0.0070],
        ...,
        [ 0.0030, -0.0017,  0.0014,  ..., -0.0064, -0.0029, -0.0058],
        [ 0.0121,  0.0131,  0.0112,  ..., -0.0103, -0.0059,  0.0059],
        [ 0.0062,  0.0035,  0.0025,  ..., -0.0039,  0.0053,  0.0062]],
       dtype=torch.float16)), ('layers.8.self_attention.dense.bias', tensor([-0.0037,  0.0019,  0.0002,  ..., -0.0046,  0.0014,  0.0025],
       dtype=torch.float16)), ('layers.8.post_attention_layernorm.weight', tensor([1.0039, 1.0059, 1.0029,  ..., 1.0166, 0.9941, 1.0059],
       dtype=torch.float16)), ('layers.8.post_attention_layernorm.bias', tensor([ 0.0013,  0.0009,  0.0033,  ..., -0.0117, -0.0100,  0.0043],
       dtype=torch.float16)), ('layers.8.mlp.dense_h_to_4h.weight', tensor([[-0.0074, -0.0043, -0.0539,  ..., -0.0015, -0.0241, -0.0207],
        [ 0.0128,  0.0032,  0.0313,  ...,  0.0162,  0.0405,  0.0183],
        [-0.0197,  0.0069,  0.0133,  ...,  0.0022,  0.0115, -0.0039],
        ...,
        [-0.0236,  0.0075,  0.0393,  ...,  0.0069,  0.0022,  0.0156],
        [ 0.0236,  0.0200,  0.0231,  ..., -0.0471,  0.0251,  0.0055],
        [ 0.0045,  0.0031, -0.0115,  ..., -0.0115, -0.0291, -0.0354]],
       dtype=torch.float16)), ('layers.8.mlp.dense_h_to_4h.bias', tensor([-0.0061, -0.0028, -0.0052,  ..., -0.0005, -0.0014, -0.0008],
       dtype=torch.float16)), ('layers.8.mlp.dense_4h_to_h.weight', tensor([[ 0.0127, -0.0084,  0.0053,  ...,  0.0059, -0.0020, -0.0027],
        [-0.0073, -0.0047,  0.0079,  ...,  0.0057,  0.0050, -0.0047],
        [-0.0062, -0.0055, -0.0058,  ..., -0.0078,  0.0123, -0.0062],
        ...,
        [ 0.0043, -0.0016, -0.0037,  ...,  0.0123,  0.0017, -0.0050],
        [-0.0034, -0.0059, -0.0040,  ..., -0.0002,  0.0070,  0.0024],
        [-0.0027,  0.0062,  0.0044,  ...,  0.0007,  0.0085, -0.0004]],
       dtype=torch.float16)), ('layers.8.mlp.dense_4h_to_h.bias', tensor([-0.0011,  0.0005,  0.0019,  ..., -0.0030,  0.0008,  0.0015],
       dtype=torch.float16)), ('layers.9.input_layernorm.weight', tensor([1.0205, 1.0449, 1.0811,  ..., 1.0225, 1.0361, 1.0312],
       dtype=torch.float16)), ('layers.9.input_layernorm.bias', tensor([-0.0016,  0.0013, -0.0017,  ...,  0.0040,  0.0045,  0.0002],
       dtype=torch.float16)), ('layers.9.self_attention.query_key_value.weight', tensor([[-0.0167,  0.0132,  0.0161,  ..., -0.0104,  0.0148, -0.0135],
        [ 0.0398,  0.0136,  0.0036,  ..., -0.0167,  0.0114, -0.0090],
        [ 0.0215,  0.0081, -0.0142,  ..., -0.0230,  0.0101, -0.0016],
        ...,
        [ 0.0260,  0.0542, -0.0113,  ...,  0.0197,  0.0212,  0.0022],
        [-0.0020,  0.0379, -0.0197,  ...,  0.0207,  0.0087, -0.0012],
        [ 0.0226,  0.0022, -0.0079,  ..., -0.0177,  0.0056,  0.0021]],
       dtype=torch.float16)), ('layers.9.self_attention.query_key_value.bias', tensor([-0.0040, -0.0048, -0.0220,  ..., -0.0015, -0.0007, -0.0015],
       dtype=torch.float16)), ('layers.9.self_attention.gaussian_weight.sigma', tensor([1.1143], dtype=torch.float16)), ('layers.9.self_attention.dense.weight', tensor([[-0.0065, -0.0022, -0.0021,  ...,  0.0089, -0.0061, -0.0062],
        [-0.0104, -0.0052,  0.0061,  ..., -0.0023,  0.0059,  0.0004],
        [ 0.0080, -0.0018, -0.0035,  ...,  0.0211, -0.0011, -0.0031],
        ...,
        [-0.0256,  0.0089,  0.0157,  ..., -0.0059, -0.0010,  0.0061],
        [-0.0090, -0.0309,  0.0022,  ...,  0.0122, -0.0026, -0.0152],
        [-0.0060, -0.0018,  0.0068,  ...,  0.0177, -0.0143,  0.0007]],
       dtype=torch.float16)), ('layers.9.self_attention.dense.bias', tensor([-0.0021,  0.0015,  0.0034,  ..., -0.0042,  0.0011,  0.0031],
       dtype=torch.float16)), ('layers.9.post_attention_layernorm.weight', tensor([1.0137, 1.0010, 1.0195,  ..., 1.0176, 0.9995, 1.0059],
       dtype=torch.float16)), ('layers.9.post_attention_layernorm.bias', tensor([-6.0501e-03,  3.9101e-05,  1.2383e-02,  ..., -1.3489e-02,
        -3.2120e-03,  1.5427e-02], dtype=torch.float16)), ('layers.9.mlp.dense_h_to_4h.weight', tensor([[ 0.0089,  0.0225, -0.0120,  ..., -0.0096,  0.0006, -0.0682],
        [-0.0262,  0.0606,  0.0020,  ..., -0.0130, -0.0046, -0.0350],
        [ 0.0358, -0.0005,  0.0219,  ...,  0.0178,  0.0132, -0.0100],
        ...,
        [ 0.0096,  0.0030,  0.0111,  ..., -0.0315,  0.0243,  0.0261],
        [ 0.0301,  0.0363,  0.0600,  ...,  0.0468,  0.0103,  0.0129],
        [ 0.0179,  0.0086, -0.0028,  ...,  0.0103,  0.0280,  0.0042]],
       dtype=torch.float16)), ('layers.9.mlp.dense_h_to_4h.bias', tensor([-0.0043, -0.0070, -0.0033,  ..., -0.0075, -0.0109, -0.0039],
       dtype=torch.float16)), ('layers.9.mlp.dense_4h_to_h.weight', tensor([[-0.0029, -0.0014, -0.0105,  ...,  0.0046,  0.0041,  0.0027],
        [ 0.0083, -0.0053, -0.0050,  ..., -0.0024,  0.0220,  0.0067],
        [ 0.0067, -0.0044,  0.0019,  ...,  0.0011,  0.0395, -0.0122],
        ...,
        [-0.0017,  0.0058,  0.0034,  ..., -0.0055,  0.0128,  0.0128],
        [ 0.0022,  0.0015,  0.0098,  ...,  0.0026,  0.0157, -0.0045],
        [ 0.0133, -0.0021,  0.0018,  ..., -0.0020,  0.0054, -0.0036]],
       dtype=torch.float16)), ('layers.9.mlp.dense_4h_to_h.bias', tensor([-0.0007,  0.0010,  0.0017,  ..., -0.0025,  0.0010,  0.0012],
       dtype=torch.float16)), ('layers.10.input_layernorm.weight', tensor([1.0596, 1.0391, 1.0684,  ..., 1.0264, 1.0508, 1.0244],
       dtype=torch.float16)), ('layers.10.input_layernorm.bias', tensor([ 0.0006,  0.0077,  0.0079,  ..., -0.0021,  0.0056, -0.0029],
       dtype=torch.float16)), ('layers.10.self_attention.query_key_value.weight', tensor([[ 0.0007,  0.0062,  0.0165,  ...,  0.0023,  0.0045, -0.0261],
        [-0.0176,  0.0006,  0.0378,  ..., -0.0057, -0.0514,  0.0063],
        [-0.0290, -0.0300,  0.0203,  ...,  0.0137, -0.0172, -0.0124],
        ...,
        [-0.0225, -0.0373,  0.0371,  ..., -0.0058, -0.0127,  0.0097],
        [ 0.0012,  0.0026, -0.0182,  ...,  0.0504,  0.0013,  0.0036],
        [ 0.0027,  0.0009,  0.0187,  ..., -0.0130,  0.0213,  0.0185]],
       dtype=torch.float16)), ('layers.10.self_attention.query_key_value.bias', tensor([ 0.0079, -0.0032, -0.0035,  ...,  0.0032,  0.0017,  0.0002],
       dtype=torch.float16)), ('layers.10.self_attention.gaussian_weight.sigma', tensor([1.1426], dtype=torch.float16)), ('layers.10.self_attention.dense.weight', tensor([[ 0.0018, -0.0120, -0.0018,  ...,  0.0009,  0.0007,  0.0046],
        [-0.0031, -0.0028,  0.0156,  ...,  0.0068, -0.0018,  0.0038],
        [ 0.0189,  0.0020, -0.0040,  ..., -0.0010,  0.0007,  0.0015],
        ...,
        [-0.0094,  0.0070, -0.0023,  ...,  0.0071,  0.0012,  0.0063],
        [-0.0137,  0.0032, -0.0002,  ...,  0.0058,  0.0018, -0.0020],
        [-0.0149, -0.0067,  0.0081,  ..., -0.0073,  0.0018,  0.0058]],
       dtype=torch.float16)), ('layers.10.self_attention.dense.bias', tensor([-0.0028, -0.0008,  0.0043,  ..., -0.0031,  0.0027,  0.0047],
       dtype=torch.float16)), ('layers.10.post_attention_layernorm.weight', tensor([1.0127, 1.0020, 1.0146,  ..., 1.0078, 0.9922, 1.0098],
       dtype=torch.float16)), ('layers.10.post_attention_layernorm.bias', tensor([ 0.0021,  0.0091,  0.0029,  ..., -0.0166,  0.0023,  0.0148],
       dtype=torch.float16)), ('layers.10.mlp.dense_h_to_4h.weight', tensor([[-0.0072, -0.0103,  0.0107,  ...,  0.0014,  0.0224,  0.0206],
        [ 0.0355,  0.0169, -0.0101,  ..., -0.0299, -0.0154, -0.0221],
        [ 0.0005,  0.0242, -0.0092,  ..., -0.0213, -0.0199, -0.0122],
        ...,
        [-0.0477,  0.0147,  0.0102,  ..., -0.0056, -0.0039, -0.0203],
        [-0.0092,  0.0228, -0.0090,  ...,  0.0094, -0.0078,  0.0133],
        [ 0.0110, -0.0112,  0.0463,  ...,  0.0199,  0.0177,  0.0110]],
       dtype=torch.float16)), ('layers.10.mlp.dense_h_to_4h.bias', tensor([-0.0080, -0.0033, -0.0044,  ..., -0.0067, -0.0037, -0.0042],
       dtype=torch.float16)), ('layers.10.mlp.dense_4h_to_h.weight', tensor([[ 0.0024,  0.0018,  0.0023,  ..., -0.0064,  0.0088, -0.0016],
        [-0.0024, -0.0026, -0.0004,  ...,  0.0018,  0.0059,  0.0024],
        [-0.0013, -0.0077,  0.0021,  ...,  0.0061,  0.0095,  0.0004],
        ...,
        [-0.0030, -0.0050, -0.0035,  ...,  0.0004, -0.0021, -0.0059],
        [ 0.0038, -0.0002,  0.0011,  ...,  0.0004, -0.0003, -0.0018],
        [ 0.0137,  0.0114,  0.0022,  ..., -0.0016,  0.0022, -0.0004]],
       dtype=torch.float16)), ('layers.10.mlp.dense_4h_to_h.bias', tensor([-0.0019, -0.0043,  0.0024,  ..., -0.0022,  0.0020,  0.0005],
       dtype=torch.float16)), ('layers.11.input_layernorm.weight', tensor([1.0225, 1.0352, 1.0508,  ..., 1.0234, 1.0332, 1.0254],
       dtype=torch.float16)), ('layers.11.input_layernorm.bias', tensor([0.0052, 0.0104, 0.0027,  ..., 0.0012, 0.0077, 0.0049],
       dtype=torch.float16)), ('layers.11.self_attention.query_key_value.weight', tensor([[-0.0075,  0.0252, -0.0006,  ..., -0.0231, -0.0037, -0.0199],
        [ 0.0414,  0.0015,  0.0286,  ...,  0.0138,  0.0099,  0.0185],
        [-0.0049, -0.0067, -0.0086,  ...,  0.0359, -0.0187,  0.0243],
        ...,
        [-0.0338, -0.0080, -0.0470,  ..., -0.0403,  0.0155,  0.0171],
        [ 0.0135,  0.0019,  0.0042,  ..., -0.0614, -0.0039,  0.0101],
        [ 0.0061,  0.0229,  0.0137,  ..., -0.0165,  0.0141,  0.0193]],
       dtype=torch.float16)), ('layers.11.self_attention.query_key_value.bias', tensor([-0.0081,  0.0041, -0.0088,  ..., -0.0010,  0.0004,  0.0002],
       dtype=torch.float16)), ('layers.11.self_attention.gaussian_weight.sigma', tensor([1.0840], dtype=torch.float16)), ('layers.11.self_attention.dense.weight', tensor([[-7.3624e-03, -1.4782e-04, -5.8517e-03,  ...,  7.1764e-05,
         -1.8463e-02, -1.1833e-02],
        [-1.7563e-02,  1.2367e-02,  1.4906e-03,  ..., -5.0697e-03,
          1.7679e-04, -2.5215e-03],
        [-3.6831e-03, -9.3937e-04,  1.0651e-02,  ..., -3.0041e-03,
          1.0696e-02, -5.9395e-03],
        ...,
        [-1.8921e-03,  8.3494e-04, -2.3594e-03,  ..., -1.4477e-03,
         -2.4395e-03,  1.0925e-02],
        [ 2.6932e-03, -1.2421e-02, -8.5754e-03,  ...,  5.7297e-03,
          2.8362e-03, -6.0005e-03],
        [-3.9406e-03, -1.4048e-03,  4.9171e-03,  ...,  1.5251e-02,
         -1.2810e-02, -2.9354e-03]], dtype=torch.float16)), ('layers.11.self_attention.dense.bias', tensor([-0.0049, -0.0056,  0.0033,  ..., -0.0038, -0.0019,  0.0028],
       dtype=torch.float16)), ('layers.11.post_attention_layernorm.weight', tensor([1.0137, 1.0029, 1.0205,  ..., 1.0127, 1.0020, 1.0117],
       dtype=torch.float16)), ('layers.11.post_attention_layernorm.bias', tensor([ 0.0037,  0.0088,  0.0032,  ..., -0.0186, -0.0074,  0.0021],
       dtype=torch.float16)), ('layers.11.mlp.dense_h_to_4h.weight', tensor([[-0.0439, -0.0082, -0.0165,  ..., -0.0139, -0.0427,  0.0086],
        [-0.0023,  0.0327,  0.0134,  ..., -0.0276, -0.0054,  0.0061],
        [ 0.0197, -0.0051,  0.0211,  ...,  0.0039,  0.0249, -0.0008],
        ...,
        [-0.0100,  0.0137, -0.0531,  ..., -0.0097, -0.0657, -0.0117],
        [ 0.0359, -0.0136, -0.0334,  ...,  0.0237, -0.0255, -0.0166],
        [ 0.0055,  0.0083,  0.0665,  ...,  0.0025, -0.0151,  0.0122]],
       dtype=torch.float16)), ('layers.11.mlp.dense_h_to_4h.bias', tensor([-0.0025, -0.0046, -0.0041,  ..., -0.0078, -0.0035, -0.0032],
       dtype=torch.float16)), ('layers.11.mlp.dense_4h_to_h.weight', tensor([[-0.0008,  0.0075,  0.0105,  ..., -0.0064, -0.0010,  0.0014],
        [ 0.0061, -0.0042, -0.0056,  ..., -0.0031,  0.0010, -0.0024],
        [ 0.0006, -0.0060, -0.0174,  ...,  0.0003, -0.0083, -0.0085],
        ...,
        [ 0.0015,  0.0071, -0.0017,  ..., -0.0041,  0.0021,  0.0078],
        [ 0.0026, -0.0032,  0.0068,  ..., -0.0105, -0.0023, -0.0028],
        [ 0.0063, -0.0004, -0.0130,  ..., -0.0056, -0.0006, -0.0045]],
       dtype=torch.float16)), ('layers.11.mlp.dense_4h_to_h.bias', tensor([-0.0036, -0.0059,  0.0018,  ..., -0.0023, -0.0017,  0.0003],
       dtype=torch.float16)), ('layers.12.input_layernorm.weight', tensor([1.0293, 1.0322, 1.0498,  ..., 1.0215, 1.0244, 1.0273],
       dtype=torch.float16)), ('layers.12.input_layernorm.bias', tensor([-0.0011,  0.0040,  0.0014,  ...,  0.0049,  0.0108,  0.0013],
       dtype=torch.float16)), ('layers.12.self_attention.query_key_value.weight', tensor([[ 0.0116, -0.0067,  0.0023,  ...,  0.0171, -0.0076, -0.0232],
        [ 0.0192,  0.0027, -0.0402,  ...,  0.0084,  0.0050, -0.0062],
        [ 0.0161,  0.0236,  0.0035,  ..., -0.0089, -0.0262, -0.0006],
        ...,
        [ 0.0115, -0.0399, -0.0221,  ..., -0.0297, -0.0458,  0.0277],
        [-0.0004, -0.0090, -0.0252,  ..., -0.0048, -0.0011,  0.0060],
        [ 0.0139, -0.0248, -0.0062,  ...,  0.0271,  0.0009, -0.0204]],
       dtype=torch.float16)), ('layers.12.self_attention.query_key_value.bias', tensor([ 0.0076,  0.0021,  0.0013,  ..., -0.0001,  0.0003,  0.0004],
       dtype=torch.float16)), ('layers.12.self_attention.gaussian_weight.sigma', tensor([1.1475], dtype=torch.float16)), ('layers.12.self_attention.dense.weight', tensor([[ 0.0035,  0.0017, -0.0170,  ...,  0.0109,  0.0004, -0.0044],
        [ 0.0069,  0.0034,  0.0076,  ..., -0.0038,  0.0112, -0.0021],
        [-0.0061, -0.0047,  0.0100,  ...,  0.0073, -0.0090,  0.0027],
        ...,
        [-0.0034, -0.0010,  0.0189,  ..., -0.0019, -0.0006,  0.0054],
        [-0.0053,  0.0028,  0.0073,  ...,  0.0066, -0.0013,  0.0022],
        [-0.0010, -0.0034, -0.0210,  ..., -0.0027, -0.0020, -0.0049]],
       dtype=torch.float16)), ('layers.12.self_attention.dense.bias', tensor([-0.0041, -0.0044,  0.0045,  ..., -0.0039, -0.0011,  0.0034],
       dtype=torch.float16)), ('layers.12.post_attention_layernorm.weight', tensor([1.0098, 1.0068, 1.0078,  ..., 1.0068, 1.0000, 1.0186],
       dtype=torch.float16)), ('layers.12.post_attention_layernorm.bias', tensor([ 0.0005,  0.0087,  0.0059,  ..., -0.0092,  0.0024, -0.0014],
       dtype=torch.float16)), ('layers.12.mlp.dense_h_to_4h.weight', tensor([[-0.0141, -0.0060, -0.0008,  ..., -0.0193, -0.0243, -0.0200],
        [ 0.0356,  0.0042, -0.0087,  ...,  0.0233, -0.0216,  0.0040],
        [ 0.0105, -0.0186, -0.0025,  ..., -0.0040,  0.0142,  0.0301],
        ...,
        [-0.0171,  0.0162, -0.0235,  ..., -0.0034,  0.0363,  0.0162],
        [-0.0307, -0.0030,  0.0195,  ...,  0.0004, -0.0127,  0.0166],
        [ 0.0138,  0.0073, -0.0270,  ..., -0.0314, -0.0333,  0.0351]],
       dtype=torch.float16)), ('layers.12.mlp.dense_h_to_4h.bias', tensor([-0.0058, -0.0048, -0.0013,  ..., -0.0019, -0.0039, -0.0038],
       dtype=torch.float16)), ('layers.12.mlp.dense_4h_to_h.weight', tensor([[-0.0052,  0.0022, -0.0005,  ...,  0.0019,  0.0056, -0.0007],
        [-0.0077, -0.0050, -0.0037,  ...,  0.0010, -0.0008, -0.0036],
        [ 0.0041, -0.0044,  0.0006,  ...,  0.0003,  0.0025,  0.0037],
        ...,
        [-0.0072,  0.0057,  0.0019,  ..., -0.0005,  0.0009, -0.0065],
        [-0.0035,  0.0067, -0.0021,  ..., -0.0074,  0.0020,  0.0069],
        [ 0.0031, -0.0002, -0.0058,  ..., -0.0061, -0.0038,  0.0073]],
       dtype=torch.float16)), ('layers.12.mlp.dense_4h_to_h.bias', tensor([-0.0021, -0.0051,  0.0019,  ..., -0.0022, -0.0039,  0.0014],
       dtype=torch.float16)), ('layers.13.input_layernorm.weight', tensor([1.0127, 1.0117, 1.0156,  ..., 1.0088, 1.0156, 1.0010],
       dtype=torch.float16)), ('layers.13.input_layernorm.bias', tensor([-0.0021,  0.0032,  0.0029,  ...,  0.0045,  0.0067,  0.0026],
       dtype=torch.float16)), ('layers.13.self_attention.query_key_value.weight', tensor([[-0.0067, -0.0145, -0.0079,  ..., -0.0056,  0.0035,  0.0142],
        [-0.0165, -0.0158, -0.0181,  ..., -0.0223,  0.0088, -0.0119],
        [-0.0365, -0.0232, -0.0442,  ..., -0.0100, -0.0130,  0.0392],
        ...,
        [-0.0246,  0.0070, -0.0170,  ..., -0.0080,  0.0298,  0.0157],
        [-0.0033,  0.0600,  0.0191,  ..., -0.0431,  0.0077, -0.0014],
        [-0.0164, -0.0013, -0.0003,  ...,  0.0035,  0.0065, -0.0210]],
       dtype=torch.float16)), ('layers.13.self_attention.query_key_value.bias', tensor([ 0.0044,  0.0053, -0.0022,  ..., -0.0002, -0.0025, -0.0040],
       dtype=torch.float16)), ('layers.13.self_attention.gaussian_weight.sigma', tensor([1.0859], dtype=torch.float16)), ('layers.13.self_attention.dense.weight', tensor([[-0.0020,  0.0038, -0.0060,  ...,  0.0084,  0.0020, -0.0035],
        [-0.0043, -0.0064,  0.0130,  ...,  0.0074, -0.0131, -0.0020],
        [-0.0003,  0.0110,  0.0082,  ...,  0.0021, -0.0122,  0.0012],
        ...,
        [ 0.0057,  0.0035, -0.0027,  ...,  0.0032,  0.0105,  0.0022],
        [ 0.0030,  0.0036,  0.0106,  ..., -0.0001, -0.0013, -0.0037],
        [-0.0011,  0.0005, -0.0026,  ..., -0.0055, -0.0059,  0.0093]],
       dtype=torch.float16)), ('layers.13.self_attention.dense.bias', tensor([-0.0026, -0.0033,  0.0036,  ..., -0.0025, -0.0051,  0.0031],
       dtype=torch.float16)), ('layers.13.post_attention_layernorm.weight', tensor([1.0049, 1.0059, 1.0234,  ..., 1.0107, 1.0039, 1.0205],
       dtype=torch.float16)), ('layers.13.post_attention_layernorm.bias', tensor([ 0.0002,  0.0038,  0.0014,  ..., -0.0005, -0.0009,  0.0062],
       dtype=torch.float16)), ('layers.13.mlp.dense_h_to_4h.weight', tensor([[ 8.6060e-03,  2.1973e-03, -4.4479e-03,  ...,  1.5495e-02,
         -2.0981e-03, -3.8910e-02],
        [ 3.1796e-03, -1.4343e-02, -9.8572e-03,  ...,  7.9422e-03,
          3.7842e-02,  2.7557e-02],
        [-1.8600e-02,  4.7302e-02, -3.5248e-02,  ...,  1.7395e-02,
          8.2064e-04,  6.3896e-03],
        ...,
        [ 4.8950e-02, -8.4698e-05, -4.4365e-03,  ...,  2.4490e-02,
          1.0872e-02,  1.3542e-02],
        [-4.4823e-04, -1.6113e-02,  2.2602e-03,  ...,  1.5497e-03,
          3.8109e-03,  2.1179e-02],
        [ 1.0796e-03, -2.7924e-02, -4.0588e-02,  ...,  1.3298e-02,
          5.0850e-03,  1.8448e-02]], dtype=torch.float16)), ('layers.13.mlp.dense_h_to_4h.bias', tensor([-0.0035, -0.0034, -0.0015,  ..., -0.0012, -0.0048,  0.0008],
       dtype=torch.float16)), ('layers.13.mlp.dense_4h_to_h.weight', tensor([[ 1.0170e-02, -6.2294e-03,  3.1292e-05,  ..., -2.3670e-03,
          4.6005e-03, -1.8511e-03],
        [-1.1511e-03, -1.1387e-03,  9.5825e-03,  ..., -2.8133e-03,
         -3.7003e-04,  4.7278e-04],
        [-4.9438e-03, -3.6373e-03,  8.4686e-03,  ..., -1.4734e-03,
         -5.9280e-03, -2.3785e-03],
        ...,
        [-3.9816e-04,  1.3952e-03, -2.1019e-03,  ...,  4.6253e-04,
         -7.5340e-04,  5.5170e-04],
        [ 1.2451e-02, -2.9564e-03,  3.7308e-03,  ...,  6.7558e-03,
         -5.3406e-03, -4.5466e-04],
        [ 3.6259e-03,  1.8740e-04,  6.2981e-03,  ..., -3.9711e-03,
         -2.1954e-03, -7.7934e-03]], dtype=torch.float16)), ('layers.13.mlp.dense_4h_to_h.bias', tensor([-0.0020, -0.0050,  0.0021,  ..., -0.0018, -0.0065,  0.0009],
       dtype=torch.float16)), ('layers.14.input_layernorm.weight', tensor([0.9980, 1.0059, 1.0068,  ..., 1.0020, 1.0020, 1.0049],
       dtype=torch.float16)), ('layers.14.input_layernorm.bias', tensor([ 0.0014,  0.0052, -0.0034,  ...,  0.0029,  0.0041,  0.0058],
       dtype=torch.float16)), ('layers.14.self_attention.query_key_value.weight', tensor([[ 0.0156, -0.0067, -0.0474,  ...,  0.0054, -0.0033, -0.0450],
        [-0.0085,  0.0061,  0.0090,  ...,  0.0013,  0.0112, -0.0279],
        [-0.0213, -0.0275,  0.0034,  ...,  0.0273,  0.0009, -0.0078],
        ...,
        [-0.0450, -0.0088,  0.0122,  ..., -0.0184,  0.0102,  0.0180],
        [ 0.0095,  0.0049,  0.0387,  ..., -0.0134,  0.0166, -0.0150],
        [ 0.0105, -0.0360, -0.0107,  ...,  0.0182,  0.0129, -0.0052]],
       dtype=torch.float16)), ('layers.14.self_attention.query_key_value.bias', tensor([ 4.4990e-04, -2.8782e-03, -5.6725e-03,  ...,  3.9978e-03,
        -2.1152e-03, -7.9036e-05], dtype=torch.float16)), ('layers.14.self_attention.gaussian_weight.sigma', tensor([1.0664], dtype=torch.float16)), ('layers.14.self_attention.dense.weight', tensor([[-3.2082e-03,  4.7455e-03, -1.0195e-03,  ..., -6.5193e-03,
         -9.0027e-03, -2.0771e-03],
        [-1.2611e-02, -4.8370e-03,  3.8891e-03,  ..., -5.6038e-03,
         -1.3046e-03, -6.3896e-03],
        [-3.6926e-03,  5.0735e-03,  3.0174e-03,  ..., -1.1816e-03,
         -8.6746e-03, -7.9041e-03],
        ...,
        [-5.8823e-03,  1.5955e-03,  7.1108e-05,  ...,  1.9493e-03,
          4.1504e-03, -3.0651e-03],
        [-3.0842e-03, -1.2331e-03,  1.7262e-04,  ..., -8.4381e-03,
         -2.2430e-03,  5.3749e-03],
        [ 1.9097e-04, -1.4248e-03,  1.6651e-03,  ..., -5.3101e-03,
          6.4898e-04, -7.0877e-03]], dtype=torch.float16)), ('layers.14.self_attention.dense.bias', tensor([-0.0026, -0.0058,  0.0032,  ..., -0.0021, -0.0039,  0.0031],
       dtype=torch.float16)), ('layers.14.post_attention_layernorm.weight', tensor([1.0176, 1.0049, 1.0176,  ..., 1.0078, 1.0020, 1.0264],
       dtype=torch.float16)), ('layers.14.post_attention_layernorm.bias', tensor([ 0.0029,  0.0103, -0.0016,  ..., -0.0030, -0.0056,  0.0133],
       dtype=torch.float16)), ('layers.14.mlp.dense_h_to_4h.weight', tensor([[ 0.0002, -0.0205, -0.0065,  ...,  0.0209,  0.0276, -0.0522],
        [-0.0052,  0.0023, -0.0147,  ...,  0.0226,  0.0366, -0.0062],
        [-0.0351,  0.0199, -0.0118,  ...,  0.0121, -0.0405,  0.0277],
        ...,
        [-0.0047, -0.0151, -0.0162,  ...,  0.0274,  0.0268, -0.0223],
        [ 0.0171, -0.0066, -0.0168,  ..., -0.0173, -0.0189, -0.0013],
        [-0.0072,  0.0122, -0.0026,  ..., -0.0094,  0.0175,  0.0073]],
       dtype=torch.float16)), ('layers.14.mlp.dense_h_to_4h.bias', tensor([-0.0006, -0.0027, -0.0011,  ..., -0.0030, -0.0045, -0.0024],
       dtype=torch.float16)), ('layers.14.mlp.dense_4h_to_h.weight', tensor([[-0.0003,  0.0076,  0.0013,  ...,  0.0032, -0.0019,  0.0001],
        [ 0.0028,  0.0078, -0.0017,  ..., -0.0005,  0.0085,  0.0016],
        [ 0.0023,  0.0024, -0.0027,  ...,  0.0021,  0.0029, -0.0037],
        ...,
        [-0.0012,  0.0071, -0.0059,  ...,  0.0058,  0.0085,  0.0003],
        [-0.0097, -0.0073,  0.0079,  ...,  0.0069,  0.0048, -0.0021],
        [-0.0114, -0.0057,  0.0088,  ...,  0.0005, -0.0009, -0.0082]],
       dtype=torch.float16)), ('layers.14.mlp.dense_4h_to_h.bias', tensor([-0.0016, -0.0042,  0.0027,  ..., -0.0028, -0.0055,  0.0007],
       dtype=torch.float16)), ('layers.15.input_layernorm.weight', tensor([1.0029, 1.0146, 1.0146,  ..., 0.9995, 1.0127, 1.0059],
       dtype=torch.float16)), ('layers.15.input_layernorm.bias', tensor([-0.0046, -0.0016, -0.0082,  ...,  0.0029,  0.0003,  0.0001],
       dtype=torch.float16)), ('layers.15.self_attention.query_key_value.weight', tensor([[-0.0199, -0.0118, -0.0307,  ...,  0.0041,  0.0168,  0.0170],
        [-0.0312,  0.0079, -0.0307,  ...,  0.0029,  0.0065,  0.0050],
        [ 0.0225, -0.0126, -0.0179,  ..., -0.0047,  0.0327,  0.0108],
        ...,
        [-0.0114, -0.0226, -0.0255,  ...,  0.0315,  0.0121,  0.0036],
        [ 0.0282, -0.0137, -0.0285,  ...,  0.0425,  0.0179, -0.0181],
        [-0.0096,  0.0263, -0.0024,  ..., -0.0090,  0.0045, -0.0131]],
       dtype=torch.float16)), ('layers.15.self_attention.query_key_value.bias', tensor([ 0.0037,  0.0005, -0.0014,  ...,  0.0021,  0.0014,  0.0007],
       dtype=torch.float16)), ('layers.15.self_attention.gaussian_weight.sigma', tensor([1.0850], dtype=torch.float16)), ('layers.15.self_attention.dense.weight', tensor([[-6.6872e-03,  8.9569e-03, -5.7259e-03,  ...,  3.0651e-03,
         -4.9171e-03, -2.0561e-03],
        [-5.4512e-03,  3.8280e-03,  6.7174e-05,  ...,  5.6267e-03,
          1.5631e-03, -2.9049e-03],
        [-5.1117e-03, -4.3106e-03,  6.4354e-03,  ...,  2.5501e-03,
          6.6795e-03, -6.7770e-05],
        ...,
        [-6.4201e-03, -1.6422e-03, -5.2185e-03,  ...,  8.2874e-04,
         -1.5199e-05,  1.1215e-03],
        [ 1.8326e-02,  1.4420e-02, -6.9380e-05,  ...,  7.9269e-03,
          3.5152e-03, -3.2158e-03],
        [-1.3256e-03,  5.7487e-03, -1.1196e-03,  ...,  3.9444e-03,
          4.2191e-03, -9.3155e-03]], dtype=torch.float16)), ('layers.15.self_attention.dense.bias', tensor([-0.0023, -0.0048,  0.0053,  ..., -0.0033, -0.0016,  0.0022],
       dtype=torch.float16)), ('layers.15.post_attention_layernorm.weight', tensor([1.0029, 1.0098, 1.0195,  ..., 1.0088, 0.9956, 1.0225],
       dtype=torch.float16)), ('layers.15.post_attention_layernorm.bias', tensor([ 0.0043,  0.0077,  0.0035,  ..., -0.0087,  0.0012,  0.0040],
       dtype=torch.float16)), ('layers.15.mlp.dense_h_to_4h.weight', tensor([[-0.0109, -0.0187,  0.0014,  ..., -0.0374, -0.0069,  0.0074],
        [ 0.0200,  0.0259,  0.0143,  ..., -0.0075, -0.0125, -0.0298],
        [ 0.0161,  0.0069, -0.0239,  ...,  0.0227,  0.0004, -0.0146],
        ...,
        [ 0.0043, -0.0089,  0.0006,  ..., -0.0290,  0.0241,  0.0210],
        [-0.0075,  0.0195,  0.0423,  ...,  0.0112,  0.0059, -0.0042],
        [ 0.0273, -0.0068, -0.0016,  ...,  0.0188,  0.0038, -0.0059]],
       dtype=torch.float16)), ('layers.15.mlp.dense_h_to_4h.bias', tensor([-0.0026, -0.0054, -0.0031,  ..., -0.0015, -0.0057, -0.0010],
       dtype=torch.float16)), ('layers.15.mlp.dense_4h_to_h.weight', tensor([[ 0.0020,  0.0028,  0.0034,  ..., -0.0005, -0.0041, -0.0083],
        [ 0.0018,  0.0061,  0.0004,  ..., -0.0017, -0.0007, -0.0014],
        [ 0.0008, -0.0072, -0.0024,  ..., -0.0053,  0.0065, -0.0062],
        ...,
        [ 0.0036, -0.0018, -0.0004,  ...,  0.0012,  0.0075,  0.0010],
        [-0.0007,  0.0038,  0.0068,  ..., -0.0042, -0.0036,  0.0047],
        [ 0.0041,  0.0005,  0.0097,  ..., -0.0053, -0.0033,  0.0067]],
       dtype=torch.float16)), ('layers.15.mlp.dense_4h_to_h.bias', tensor([-0.0012, -0.0054,  0.0024,  ..., -0.0021, -0.0051,  0.0014],
       dtype=torch.float16)), ('layers.16.input_layernorm.weight', tensor([1.0127, 1.0137, 1.0146,  ..., 1.0078, 1.0127, 1.0225],
       dtype=torch.float16)), ('layers.16.input_layernorm.bias', tensor([-0.0031, -0.0008, -0.0002,  ...,  0.0018, -0.0008,  0.0007],
       dtype=torch.float16)), ('layers.16.self_attention.query_key_value.weight', tensor([[ 0.0254, -0.0224, -0.0107,  ...,  0.0216, -0.0190,  0.0047],
        [-0.0225,  0.0195, -0.0288,  ...,  0.0385, -0.0179, -0.0201],
        [-0.0104,  0.0206,  0.0201,  ..., -0.0128, -0.0013,  0.0072],
        ...,
        [ 0.0106,  0.0069,  0.0136,  ..., -0.0491, -0.0121, -0.0469],
        [-0.0064,  0.0223,  0.0105,  ...,  0.0126,  0.0236, -0.0091],
        [ 0.0601,  0.0248, -0.0112,  ..., -0.0152, -0.0198,  0.0127]],
       dtype=torch.float16)), ('layers.16.self_attention.query_key_value.bias', tensor([ 0.0026, -0.0037, -0.0036,  ..., -0.0043, -0.0044, -0.0038],
       dtype=torch.float16)), ('layers.16.self_attention.gaussian_weight.sigma', tensor([1.3975], dtype=torch.float16)), ('layers.16.self_attention.dense.weight', tensor([[ 8.3542e-04,  8.3618e-03, -6.2637e-03,  ...,  1.4809e-02,
          6.3324e-03,  6.9733e-03],
        [ 2.9659e-03,  1.7872e-03, -8.5907e-03,  ..., -5.2261e-03,
         -2.5272e-03,  6.7482e-03],
        [ 5.7869e-03, -2.3861e-03, -4.2801e-03,  ..., -5.6152e-03,
          1.7786e-03,  3.7251e-03],
        ...,
        [-4.0779e-03, -4.4479e-03, -5.6534e-03,  ...,  2.0809e-03,
          9.8133e-04,  1.0090e-03],
        [ 4.0932e-03,  1.7490e-03, -8.2321e-03,  ..., -1.0002e-02,
          7.1068e-03,  3.6507e-03],
        [ 9.8801e-03, -2.1915e-03, -5.8136e-03,  ...,  2.2182e-03,
         -5.3482e-03,  1.4007e-05]], dtype=torch.float16)), ('layers.16.self_attention.dense.bias', tensor([-0.0020, -0.0043,  0.0043,  ..., -0.0040, -0.0030,  0.0024],
       dtype=torch.float16)), ('layers.16.post_attention_layernorm.weight', tensor([1.0059, 1.0127, 1.0127,  ..., 1.0166, 0.9990, 1.0156],
       dtype=torch.float16)), ('layers.16.post_attention_layernorm.bias', tensor([ 0.0061,  0.0050,  0.0053,  ..., -0.0079,  0.0005,  0.0009],
       dtype=torch.float16)), ('layers.16.mlp.dense_h_to_4h.weight', tensor([[-0.0051,  0.0121,  0.0097,  ...,  0.0128,  0.0273, -0.0366],
        [-0.0135,  0.0209,  0.0282,  ...,  0.0138, -0.0137,  0.0103],
        [ 0.0055,  0.0258, -0.0212,  ..., -0.0094,  0.0217, -0.0008],
        ...,
        [-0.0229,  0.0075,  0.0206,  ..., -0.0102,  0.0046,  0.0044],
        [ 0.0134,  0.0385, -0.0017,  ...,  0.0089,  0.0286, -0.0127],
        [-0.0105,  0.0334,  0.0118,  ...,  0.0055, -0.0181,  0.0284]],
       dtype=torch.float16)), ('layers.16.mlp.dense_h_to_4h.bias', tensor([-0.0033, -0.0021, -0.0020,  ..., -0.0062, -0.0030, -0.0060],
       dtype=torch.float16)), ('layers.16.mlp.dense_4h_to_h.weight', tensor([[ 7.1096e-04,  1.6088e-03,  4.3907e-03,  ...,  3.2749e-03,
         -6.1302e-03,  2.0638e-03],
        [-3.8290e-04, -2.3518e-03, -1.6985e-03,  ...,  9.0742e-04,
         -3.8185e-03, -4.9019e-03],
        [-4.8256e-03, -2.4307e-04,  1.6413e-03,  ...,  1.0815e-03,
          2.8915e-03, -6.5041e-04],
        ...,
        [ 6.0678e-05,  2.3060e-03,  7.5760e-03,  ...,  3.4313e-03,
         -6.5880e-03,  3.3875e-03],
        [ 5.1003e-03,  2.9659e-03, -5.3864e-03,  ...,  2.3746e-03,
          1.7557e-03,  3.2635e-03],
        [-1.5221e-03, -4.2572e-03,  1.2188e-03,  ..., -6.4812e-03,
          2.5425e-03, -1.5497e-03]], dtype=torch.float16)), ('layers.16.mlp.dense_4h_to_h.bias', tensor([-0.0020, -0.0043,  0.0030,  ..., -0.0027, -0.0045,  0.0024],
       dtype=torch.float16)), ('layers.17.input_layernorm.weight', tensor([0.9956, 1.0059, 1.0020,  ..., 1.0078, 0.9941, 1.0088],
       dtype=torch.float16)), ('layers.17.input_layernorm.bias', tensor([-0.0033, -0.0029, -0.0021,  ...,  0.0042,  0.0007,  0.0034],
       dtype=torch.float16)), ('layers.17.self_attention.query_key_value.weight', tensor([[-9.1095e-03,  1.2039e-02, -5.9545e-05,  ...,  1.5327e-02,
         -2.4429e-02,  8.5220e-03],
        [ 2.6733e-02,  2.0874e-02,  1.0361e-02,  ...,  1.9165e-02,
          4.7791e-02, -2.0504e-03],
        [ 2.0432e-02, -3.8269e-02,  8.7051e-03,  ...,  1.3840e-02,
          3.2379e-02,  2.5833e-02],
        ...,
        [ 8.8806e-03,  1.2903e-03, -1.8173e-02,  ..., -2.2919e-02,
          1.2083e-03, -2.5070e-02],
        [ 4.7729e-02, -1.3237e-02,  2.4826e-02,  ...,  2.8412e-02,
         -5.8784e-03, -5.7411e-03],
        [ 3.5187e-02, -1.1162e-02, -1.4183e-02,  ...,  6.9580e-03,
         -1.9699e-02, -3.9581e-02]], dtype=torch.float16)), ('layers.17.self_attention.query_key_value.bias', tensor([ 0.0046,  0.0005,  0.0012,  ...,  0.0018, -0.0009,  0.0008],
       dtype=torch.float16)), ('layers.17.self_attention.gaussian_weight.sigma', tensor([1.1055], dtype=torch.float16)), ('layers.17.self_attention.dense.weight', tensor([[-0.0050,  0.0034,  0.0030,  ..., -0.0062, -0.0072, -0.0039],
        [-0.0028,  0.0079, -0.0063,  ..., -0.0066,  0.0062, -0.0042],
        [-0.0035, -0.0061, -0.0019,  ..., -0.0082,  0.0063,  0.0047],
        ...,
        [ 0.0028,  0.0042,  0.0027,  ...,  0.0034, -0.0051, -0.0011],
        [ 0.0026, -0.0057,  0.0020,  ..., -0.0058,  0.0085,  0.0027],
        [ 0.0076,  0.0008,  0.0005,  ...,  0.0094, -0.0030,  0.0132]],
       dtype=torch.float16)), ('layers.17.self_attention.dense.bias', tensor([-0.0020, -0.0018,  0.0050,  ..., -0.0039, -0.0033,  0.0036],
       dtype=torch.float16)), ('layers.17.post_attention_layernorm.weight', tensor([1.0117, 1.0107, 1.0117,  ..., 1.0088, 0.9971, 1.0186],
       dtype=torch.float16)), ('layers.17.post_attention_layernorm.bias', tensor([-0.0024,  0.0012,  0.0011,  ...,  0.0009, -0.0008,  0.0041],
       dtype=torch.float16)), ('layers.17.mlp.dense_h_to_4h.weight', tensor([[ 0.0137,  0.0265, -0.0121,  ...,  0.0113,  0.0018, -0.0446],
        [-0.0294,  0.0117, -0.0305,  ..., -0.0016, -0.0302,  0.0113],
        [ 0.0148,  0.0259,  0.0173,  ...,  0.0142,  0.0043, -0.0059],
        ...,
        [-0.0032, -0.0218, -0.0035,  ..., -0.0049, -0.0106,  0.0060],
        [-0.0166,  0.0089, -0.0381,  ..., -0.0028,  0.0108,  0.0135],
        [ 0.0250, -0.0060,  0.0108,  ..., -0.0002, -0.0395, -0.0025]],
       dtype=torch.float16)), ('layers.17.mlp.dense_h_to_4h.bias', tensor([-0.0012, -0.0019, -0.0010,  ..., -0.0031, -0.0033, -0.0030],
       dtype=torch.float16)), ('layers.17.mlp.dense_4h_to_h.weight', tensor([[ 5.8098e-03,  7.4921e-03, -2.3785e-03,  ...,  2.4185e-03,
         -1.6766e-03, -2.7199e-03],
        [ 2.8267e-03,  5.5313e-03,  2.9430e-03,  ...,  5.1422e-03,
         -2.0313e-03, -1.4296e-03],
        [ 1.9670e-06, -4.7798e-03, -1.2054e-03,  ..., -2.4438e-04,
          4.9248e-03, -2.9697e-03],
        ...,
        [-4.7531e-03, -2.7523e-03, -2.8496e-03,  ..., -4.9877e-04,
          2.9898e-04,  3.3207e-03],
        [ 1.6050e-03, -7.7553e-03, -8.1873e-04,  ..., -5.7755e-03,
         -3.6583e-03, -1.7223e-03],
        [ 8.7404e-04,  5.7945e-03,  3.7079e-03,  ..., -5.5428e-03,
         -7.0953e-03, -9.2363e-04]], dtype=torch.float16)), ('layers.17.mlp.dense_4h_to_h.bias', tensor([-0.0010, -0.0026,  0.0018,  ..., -0.0031, -0.0046,  0.0035],
       dtype=torch.float16)), ('layers.18.input_layernorm.weight', tensor([1.0049, 0.9941, 0.9951,  ..., 0.9980, 0.9951, 0.9937],
       dtype=torch.float16)), ('layers.18.input_layernorm.bias', tensor([-0.0024,  0.0026, -0.0101,  ..., -0.0008,  0.0062, -0.0023],
       dtype=torch.float16)), ('layers.18.self_attention.query_key_value.weight', tensor([[-6.1226e-03, -3.9001e-02,  8.1100e-03,  ...,  3.3905e-02,
         -3.6041e-02,  2.7817e-02],
        [ 2.9160e-02,  2.9297e-02,  3.5858e-02,  ...,  1.5717e-02,
         -7.5073e-03,  2.9160e-02],
        [-2.1881e-02,  1.2657e-02, -3.5278e-02,  ...,  1.4114e-02,
         -5.2512e-05,  2.0203e-02],
        ...,
        [-1.4381e-02,  2.1606e-02,  1.3962e-02,  ..., -1.4259e-02,
          2.4109e-03, -2.9266e-02],
        [ 9.9106e-03, -1.0307e-02,  5.5923e-03,  ..., -1.6418e-02,
         -4.8218e-03, -2.8915e-02],
        [ 1.2817e-02, -1.9501e-02,  3.3691e-02,  ...,  4.6806e-03,
          1.2840e-02, -1.0651e-02]], dtype=torch.float16)), ('layers.18.self_attention.query_key_value.bias', tensor([ 0.0013,  0.0057, -0.0027,  ..., -0.0027,  0.0010, -0.0020],
       dtype=torch.float16)), ('layers.18.self_attention.gaussian_weight.sigma', tensor([1.1025], dtype=torch.float16)), ('layers.18.self_attention.dense.weight', tensor([[ 3.9253e-03,  8.2254e-04,  5.1384e-03,  ...,  4.5395e-03,
         -3.1776e-03,  1.1873e-03],
        [-2.6722e-03, -1.5724e-04,  2.1400e-03,  ..., -1.7426e-02,
         -5.3177e-03, -8.4076e-03],
        [-5.1804e-03, -2.8286e-03, -1.9894e-03,  ...,  2.6112e-03,
         -3.7022e-03, -1.2989e-03],
        ...,
        [ 8.4763e-03,  7.9880e-03,  3.1414e-03,  ...,  2.7828e-03,
          3.0441e-03, -7.8659e-03],
        [ 4.5547e-03, -1.4019e-03, -3.2120e-03,  ...,  1.1044e-03,
         -2.7447e-03, -6.0654e-03],
        [ 1.7986e-03, -1.1892e-03, -6.0616e-03,  ...,  5.2273e-05,
          9.1629e-03,  1.0147e-03]], dtype=torch.float16)), ('layers.18.self_attention.dense.bias', tensor([-0.0038, -0.0013,  0.0057,  ..., -0.0056, -0.0017,  0.0018],
       dtype=torch.float16)), ('layers.18.post_attention_layernorm.weight', tensor([1.0127, 1.0059, 1.0078,  ..., 1.0117, 0.9985, 1.0166],
       dtype=torch.float16)), ('layers.18.post_attention_layernorm.bias', tensor([ 0.0080,  0.0021,  0.0066,  ..., -0.0021,  0.0033,  0.0051],
       dtype=torch.float16)), ('layers.18.mlp.dense_h_to_4h.weight', tensor([[ 0.0060,  0.0173, -0.0017,  ..., -0.0087, -0.0471,  0.0006],
        [-0.0236,  0.0315,  0.0310,  ...,  0.0164, -0.0199,  0.0056],
        [ 0.0334,  0.0064,  0.0213,  ..., -0.0291, -0.0153, -0.0094],
        ...,
        [ 0.0436,  0.0106,  0.0219,  ...,  0.0126, -0.0327,  0.0053],
        [ 0.0152,  0.0183, -0.0176,  ...,  0.0129, -0.0189,  0.0033],
        [ 0.0019, -0.0053,  0.0039,  ...,  0.0035, -0.0100,  0.0264]],
       dtype=torch.float16)), ('layers.18.mlp.dense_h_to_4h.bias', tensor([-0.0025, -0.0069, -0.0054,  ..., -0.0027, -0.0033, -0.0002],
       dtype=torch.float16)), ('layers.18.mlp.dense_4h_to_h.weight', tensor([[ 0.0056, -0.0085,  0.0042,  ..., -0.0008,  0.0017,  0.0039],
        [-0.0046,  0.0061, -0.0013,  ..., -0.0043,  0.0062, -0.0002],
        [-0.0023, -0.0003,  0.0020,  ..., -0.0038,  0.0030,  0.0105],
        ...,
        [-0.0049,  0.0010,  0.0027,  ...,  0.0032, -0.0021, -0.0025],
        [-0.0007, -0.0021, -0.0068,  ...,  0.0050,  0.0008,  0.0058],
        [-0.0029, -0.0019, -0.0081,  ...,  0.0051, -0.0013, -0.0033]],
       dtype=torch.float16)), ('layers.18.mlp.dense_4h_to_h.bias', tensor([-0.0015, -0.0020,  0.0026,  ..., -0.0043, -0.0043,  0.0046],
       dtype=torch.float16)), ('layers.19.input_layernorm.weight', tensor([0.9966, 0.9946, 0.9932,  ..., 0.9897, 0.9937, 1.0078],
       dtype=torch.float16)), ('layers.19.input_layernorm.bias', tensor([-0.0034,  0.0007, -0.0013,  ...,  0.0031, -0.0010,  0.0041],
       dtype=torch.float16)), ('layers.19.self_attention.query_key_value.weight', tensor([[ 1.8816e-03, -3.6438e-02,  2.0737e-02,  ...,  7.3509e-03,
         -2.6672e-02, -1.4557e-02],
        [-8.5983e-03,  4.3373e-03,  4.2908e-02,  ...,  9.6970e-03,
          1.0033e-02, -1.3863e-02],
        [-1.4732e-02, -1.2161e-02, -4.8157e-02,  ...,  2.8442e-02,
         -1.0376e-02,  3.7323e-02],
        ...,
        [ 1.9653e-02, -2.3041e-02, -6.1464e-04,  ..., -7.8726e-04,
          1.8539e-02, -8.2397e-03],
        [ 2.1393e-02, -4.0591e-05,  2.2186e-02,  ...,  1.1932e-02,
         -1.8387e-02, -7.4539e-03],
        [ 1.9064e-03,  1.3245e-02, -1.4439e-03,  ...,  1.4557e-02,
         -2.9469e-03,  2.0157e-02]], dtype=torch.float16)), ('layers.19.self_attention.query_key_value.bias', tensor([-5.1613e-03,  5.4657e-05, -5.6534e-03,  ..., -2.2793e-03,
        -1.5812e-03, -2.8915e-03], dtype=torch.float16)), ('layers.19.self_attention.gaussian_weight.sigma', tensor([1.0889], dtype=torch.float16)), ('layers.19.self_attention.dense.weight', tensor([[ 0.0040,  0.0069, -0.0006,  ...,  0.0069, -0.0012,  0.0053],
        [ 0.0082, -0.0051, -0.0006,  ...,  0.0044, -0.0017, -0.0040],
        [ 0.0009, -0.0039, -0.0014,  ...,  0.0028, -0.0023, -0.0015],
        ...,
        [ 0.0030, -0.0013, -0.0009,  ..., -0.0088, -0.0065,  0.0004],
        [-0.0008, -0.0013,  0.0084,  ...,  0.0004, -0.0062, -0.0050],
        [-0.0055, -0.0005,  0.0060,  ...,  0.0041, -0.0025, -0.0006]],
       dtype=torch.float16)), ('layers.19.self_attention.dense.bias', tensor([-0.0026, -0.0009,  0.0048,  ..., -0.0049, -0.0026,  0.0049],
       dtype=torch.float16)), ('layers.19.post_attention_layernorm.weight', tensor([1.0088, 1.0039, 1.0107,  ..., 1.0117, 0.9951, 1.0146],
       dtype=torch.float16)), ('layers.19.post_attention_layernorm.bias', tensor([ 0.0029,  0.0055,  0.0039,  ..., -0.0001,  0.0011,  0.0017],
       dtype=torch.float16)), ('layers.19.mlp.dense_h_to_4h.weight', tensor([[ 0.0089,  0.0142, -0.0127,  ...,  0.0497,  0.0173,  0.0352],
        [-0.0439,  0.0241,  0.0041,  ...,  0.0087,  0.0116, -0.0181],
        [-0.0099, -0.0262, -0.0043,  ..., -0.0100,  0.0130,  0.0217],
        ...,
        [ 0.0187,  0.0206,  0.0219,  ..., -0.0572, -0.0128, -0.0114],
        [ 0.0009,  0.0165,  0.0045,  ...,  0.0025, -0.0247,  0.0041],
        [ 0.0093,  0.0086, -0.0019,  ..., -0.0105,  0.0120,  0.0081]],
       dtype=torch.float16)), ('layers.19.mlp.dense_h_to_4h.bias', tensor([-0.0040, -0.0047, -0.0001,  ..., -0.0053,  0.0005, -0.0029],
       dtype=torch.float16)), ('layers.19.mlp.dense_4h_to_h.weight', tensor([[ 9.1553e-03,  5.8365e-03,  4.1885e-03,  ..., -7.0877e-03,
         -3.2959e-03,  3.6640e-03],
        [-6.3210e-03, -5.8136e-03,  3.8314e-04,  ...,  2.8610e-05,
          7.3242e-03, -1.9211e-02],
        [-5.4588e-03,  1.0843e-03,  8.3618e-03,  ..., -7.2212e-03,
          1.9569e-03,  3.4580e-03],
        ...,
        [-7.0667e-04, -2.4357e-03, -2.6016e-03,  ...,  4.5662e-03,
          3.6526e-03, -9.3765e-03],
        [ 1.7338e-03, -1.2863e-02, -5.7144e-03,  ...,  5.1003e-03,
         -1.5083e-02,  1.0195e-03],
        [-3.3131e-03,  3.0670e-03, -1.1116e-02,  ..., -1.2207e-03,
          7.0648e-03, -9.2506e-04]], dtype=torch.float16)), ('layers.19.mlp.dense_4h_to_h.bias', tensor([-0.0012, -0.0018,  0.0031,  ..., -0.0061, -0.0030,  0.0056],
       dtype=torch.float16)), ('layers.20.input_layernorm.weight', tensor([1.0000, 0.9917, 0.9971,  ..., 0.9912, 0.9912, 0.9961],
       dtype=torch.float16)), ('layers.20.input_layernorm.bias', tensor([ 0.0042,  0.0064, -0.0027,  ...,  0.0011,  0.0048, -0.0018],
       dtype=torch.float16)), ('layers.20.self_attention.query_key_value.weight', tensor([[-0.0027,  0.0245, -0.0049,  ..., -0.0145, -0.0018, -0.0035],
        [ 0.0057, -0.0529, -0.0015,  ..., -0.0037,  0.0177,  0.0071],
        [ 0.0042,  0.0159, -0.0044,  ..., -0.0088, -0.0100,  0.0074],
        ...,
        [-0.0004,  0.0011, -0.0027,  ..., -0.0070, -0.0010,  0.0009],
        [ 0.0027, -0.0176,  0.0083,  ..., -0.0130, -0.0128, -0.0030],
        [-0.0460, -0.0232,  0.0212,  ...,  0.0011,  0.0126,  0.0201]],
       dtype=torch.float16)), ('layers.20.self_attention.query_key_value.bias', tensor([ 0.0015,  0.0042, -0.0008,  ...,  0.0021, -0.0027,  0.0012],
       dtype=torch.float16)), ('layers.20.self_attention.gaussian_weight.sigma', tensor([1.1035], dtype=torch.float16)), ('layers.20.self_attention.dense.weight', tensor([[ 1.2226e-03, -1.9093e-03, -4.2114e-03,  ..., -4.9210e-04,
         -4.8566e-04, -3.6449e-03],
        [ 3.9291e-03, -3.5667e-03,  5.7220e-03,  ..., -7.7095e-03,
          6.6662e-04, -1.2817e-03],
        [ 3.8719e-03, -3.2978e-03,  1.2856e-02,  ..., -4.4212e-03,
          1.4839e-03, -8.3847e-03],
        ...,
        [-7.4959e-03,  6.2790e-03, -1.5068e-03,  ...,  5.5771e-03,
         -3.5400e-03,  7.2784e-03],
        [-1.3857e-03, -1.6603e-03, -1.6642e-03,  ...,  3.2845e-03,
         -9.0551e-04, -6.5207e-05],
        [-5.4207e-03,  4.3416e-04, -7.2193e-04,  ...,  6.9542e-03,
         -7.8812e-03,  3.4904e-03]], dtype=torch.float16)), ('layers.20.self_attention.dense.bias', tensor([-0.0029, -0.0015,  0.0041,  ..., -0.0051, -0.0008,  0.0046],
       dtype=torch.float16)), ('layers.20.post_attention_layernorm.weight', tensor([1.0088, 1.0000, 1.0059,  ..., 1.0107, 1.0029, 1.0195],
       dtype=torch.float16)), ('layers.20.post_attention_layernorm.bias', tensor([ 0.0034,  0.0001,  0.0081,  ..., -0.0038, -0.0011,  0.0086],
       dtype=torch.float16)), ('layers.20.mlp.dense_h_to_4h.weight', tensor([[ 5.5161e-03,  6.6872e-03, -2.4624e-03,  ..., -9.3231e-03,
          2.0203e-02, -8.4991e-03],
        [-3.3474e-03, -5.9395e-03, -1.5617e-02,  ..., -2.9480e-02,
         -5.6877e-03, -4.1504e-02],
        [-1.0666e-02,  1.3596e-02,  2.2537e-02,  ..., -2.7237e-02,
          2.7237e-02, -1.1406e-02],
        ...,
        [ 1.5488e-02, -2.5833e-02, -9.4528e-03,  ...,  1.4015e-02,
         -1.0193e-02, -9.6436e-03],
        [ 4.2145e-02,  8.9798e-03,  4.8218e-03,  ..., -1.5488e-02,
         -1.3573e-02, -1.7762e-04],
        [ 9.8705e-05, -8.4991e-03,  1.5900e-02,  ..., -1.4984e-02,
         -1.0979e-02,  2.7390e-02]], dtype=torch.float16)), ('layers.20.mlp.dense_h_to_4h.bias', tensor([-0.0044, -0.0006, -0.0034,  ..., -0.0022,  0.0001, -0.0004],
       dtype=torch.float16)), ('layers.20.mlp.dense_4h_to_h.weight', tensor([[-7.4744e-05, -1.3475e-03,  5.6267e-03,  ...,  6.3210e-03,
         -5.1689e-03,  4.3144e-03],
        [-3.0470e-04,  3.7956e-03,  4.0555e-04,  ..., -2.4853e-03,
          6.5689e-03, -1.7509e-03],
        [-1.1742e-02,  1.6422e-03,  2.8458e-03,  ..., -8.9025e-04,
          3.5305e-03, -6.5041e-03],
        ...,
        [ 9.2926e-03, -6.3744e-03, -2.8000e-03,  ..., -4.5586e-03,
          1.6661e-03, -1.0223e-03],
        [ 5.2299e-03, -3.0594e-03, -3.7918e-03,  ...,  5.4054e-03,
         -9.0485e-03, -2.2144e-03],
        [-5.0545e-04, -5.9247e-05,  6.4011e-03,  ...,  2.8572e-03,
         -4.2725e-04, -4.8485e-03]], dtype=torch.float16)), ('layers.20.mlp.dense_4h_to_h.bias', tensor([-0.0013, -0.0017,  0.0027,  ..., -0.0051, -0.0028,  0.0054],
       dtype=torch.float16)), ('layers.21.input_layernorm.weight', tensor([0.9951, 0.9946, 0.9946,  ..., 0.9917, 0.9873, 0.9990],
       dtype=torch.float16)), ('layers.21.input_layernorm.bias', tensor([-0.0042, -0.0013, -0.0096,  ...,  0.0074,  0.0042,  0.0093],
       dtype=torch.float16)), ('layers.21.self_attention.query_key_value.weight', tensor([[ 2.4658e-02,  1.8326e-02, -9.7656e-03,  ...,  8.4686e-03,
         -3.9744e-04, -4.9408e-02],
        [ 9.0103e-03, -9.3794e-04, -6.6261e-03,  ..., -2.0996e-02,
          1.1070e-02,  2.9922e-02],
        [-9.7427e-03, -1.5450e-02,  8.0872e-04,  ...,  2.0683e-05,
          6.4697e-03,  1.5160e-02],
        ...,
        [-2.4139e-02,  8.7814e-03, -3.1738e-02,  ...,  1.2741e-03,
         -1.4702e-02,  2.0020e-02],
        [ 5.1727e-03, -2.2522e-02, -1.8234e-02,  ...,  8.6899e-03,
         -1.2047e-02, -1.3077e-02],
        [ 3.2196e-02,  7.3433e-03,  5.7220e-03,  ...,  1.0166e-03,
          1.6342e-02,  2.3849e-02]], dtype=torch.float16)), ('layers.21.self_attention.query_key_value.bias', tensor([-1.8978e-04, -8.8072e-04,  3.0098e-03,  ..., -3.0289e-03,
        -4.1485e-05, -1.5316e-03], dtype=torch.float16)), ('layers.21.self_attention.gaussian_weight.sigma', tensor([1.0752], dtype=torch.float16)), ('layers.21.self_attention.dense.weight', tensor([[-0.0039, -0.0044,  0.0034,  ..., -0.0061, -0.0074, -0.0035],
        [-0.0048,  0.0082,  0.0008,  ...,  0.0036,  0.0116,  0.0115],
        [-0.0059,  0.0053, -0.0028,  ..., -0.0019, -0.0011,  0.0016],
        ...,
        [ 0.0017, -0.0036,  0.0007,  ..., -0.0062,  0.0068, -0.0031],
        [-0.0004,  0.0010, -0.0036,  ..., -0.0055, -0.0050, -0.0004],
        [ 0.0007, -0.0056,  0.0037,  ..., -0.0012, -0.0129,  0.0041]],
       dtype=torch.float16)), ('layers.21.self_attention.dense.bias', tensor([-1.2388e-03,  7.6294e-05,  3.5572e-03,  ..., -4.8714e-03,
        -3.0842e-03,  4.5967e-03], dtype=torch.float16)), ('layers.21.post_attention_layernorm.weight', tensor([1.0029, 1.0059, 1.0107,  ..., 1.0146, 1.0068, 1.0107],
       dtype=torch.float16)), ('layers.21.post_attention_layernorm.bias', tensor([ 0.0050,  0.0006,  0.0006,  ..., -0.0037,  0.0057,  0.0047],
       dtype=torch.float16)), ('layers.21.mlp.dense_h_to_4h.weight', tensor([[-0.0399, -0.0392, -0.0110,  ...,  0.0181, -0.0134,  0.0035],
        [-0.0030,  0.0188, -0.0247,  ...,  0.0110, -0.0295, -0.0075],
        [-0.0122,  0.0166, -0.0125,  ..., -0.0094,  0.0125, -0.0274],
        ...,
        [ 0.0035,  0.0146, -0.0179,  ...,  0.0148, -0.0039,  0.0255],
        [ 0.0005,  0.0045, -0.0340,  ..., -0.0093,  0.0072, -0.0068],
        [-0.0054,  0.0259, -0.0022,  ...,  0.0255, -0.0004, -0.0078]],
       dtype=torch.float16)), ('layers.21.mlp.dense_h_to_4h.bias', tensor([-0.0015,  0.0025, -0.0018,  ...,  0.0005, -0.0032, -0.0035],
       dtype=torch.float16)), ('layers.21.mlp.dense_4h_to_h.weight', tensor([[ 4.5128e-03,  6.1836e-03,  6.8092e-03,  ..., -6.5041e-04,
          3.7594e-03,  1.5316e-03],
        [ 5.1422e-03,  2.9202e-03,  3.3112e-03,  ...,  7.5150e-04,
         -3.1624e-03, -1.1959e-03],
        [ 1.3056e-03,  4.0817e-03,  6.5346e-03,  ...,  6.5842e-03,
          7.2098e-04,  3.8948e-03],
        ...,
        [-2.2233e-04,  4.3221e-03, -1.3113e-03,  ...,  5.4550e-04,
          6.4774e-03,  7.2289e-03],
        [-5.1003e-03,  4.6730e-04, -4.7951e-03,  ..., -4.5586e-03,
          4.7493e-04, -3.2444e-03],
        [-9.8038e-04,  1.9121e-03,  2.2240e-03,  ...,  5.6624e-06,
          6.9237e-03, -1.9722e-03]], dtype=torch.float16)), ('layers.21.mlp.dense_4h_to_h.bias', tensor([-0.0013, -0.0011,  0.0029,  ..., -0.0055, -0.0020,  0.0049],
       dtype=torch.float16)), ('layers.22.input_layernorm.weight', tensor([0.9995, 0.9961, 0.9893,  ..., 0.9941, 0.9873, 1.0049],
       dtype=torch.float16)), ('layers.22.input_layernorm.bias', tensor([-0.0041, -0.0038, -0.0031,  ...,  0.0048,  0.0005,  0.0020],
       dtype=torch.float16)), ('layers.22.self_attention.query_key_value.weight', tensor([[ 0.0260,  0.0104,  0.0190,  ..., -0.0302,  0.0056,  0.0129],
        [ 0.0011,  0.0040, -0.0169,  ...,  0.0191,  0.0332,  0.0205],
        [ 0.0006,  0.0117,  0.0240,  ...,  0.0254, -0.0189,  0.0384],
        ...,
        [ 0.0269, -0.0041,  0.0116,  ...,  0.0101, -0.0084,  0.0220],
        [ 0.0041,  0.0232,  0.0170,  ..., -0.0006, -0.0003,  0.0452],
        [ 0.0066,  0.0321,  0.0076,  ..., -0.0008,  0.0059, -0.0093]],
       dtype=torch.float16)), ('layers.22.self_attention.query_key_value.bias', tensor([-0.0026, -0.0033, -0.0016,  ..., -0.0028, -0.0021,  0.0017],
       dtype=torch.float16)), ('layers.22.self_attention.gaussian_weight.sigma', tensor([1.0479], dtype=torch.float16)), ('layers.22.self_attention.dense.weight', tensor([[-2.0008e-03,  4.6253e-04,  5.5923e-03,  ...,  1.1215e-02,
          3.9520e-03, -2.3079e-03],
        [ 2.2964e-03,  4.0550e-03,  6.1150e-03,  ...,  1.3561e-03,
          4.5471e-03, -3.6640e-03],
        [ 2.3308e-03, -2.4567e-03,  4.8218e-03,  ..., -4.9629e-03,
         -1.6470e-03, -2.5482e-03],
        ...,
        [-1.0849e-02, -5.2948e-03, -6.1226e-03,  ...,  5.1613e-03,
         -9.4528e-03,  2.3136e-03],
        [ 2.0485e-03, -5.4855e-03,  1.4365e-05,  ..., -4.1351e-03,
          6.7177e-03, -1.5640e-04],
        [ 3.9749e-03, -6.4135e-04, -7.2060e-03,  ..., -2.3270e-03,
          2.8019e-03,  2.8229e-03]], dtype=torch.float16)), ('layers.22.self_attention.dense.bias', tensor([-0.0020, -0.0007,  0.0037,  ..., -0.0060, -0.0016,  0.0061],
       dtype=torch.float16)), ('layers.22.post_attention_layernorm.weight', tensor([1.0088, 0.9995, 1.0020,  ..., 1.0078, 1.0039, 1.0107],
       dtype=torch.float16)), ('layers.22.post_attention_layernorm.bias', tensor([ 0.0013, -0.0025,  0.0040,  ...,  0.0015,  0.0028, -0.0006],
       dtype=torch.float16)), ('layers.22.mlp.dense_h_to_4h.weight', tensor([[ 0.0458,  0.0204, -0.0276,  ...,  0.0090, -0.0174,  0.0406],
        [ 0.0042,  0.0180, -0.0024,  ..., -0.0130, -0.0166,  0.0105],
        [-0.0349, -0.0182, -0.0002,  ..., -0.0310,  0.0153,  0.0025],
        ...,
        [ 0.0210,  0.0335, -0.0119,  ..., -0.0205,  0.0031,  0.0232],
        [ 0.0016,  0.0338,  0.0097,  ..., -0.0215,  0.0186, -0.0076],
        [ 0.0123,  0.0109,  0.0444,  ...,  0.0020,  0.0440,  0.0032]],
       dtype=torch.float16)), ('layers.22.mlp.dense_h_to_4h.bias', tensor([-2.4872e-03, -5.0392e-03, -2.1858e-03,  ..., -9.8348e-05,
        -2.1019e-03, -2.5272e-04], dtype=torch.float16)), ('layers.22.mlp.dense_4h_to_h.weight', tensor([[ 1.0717e-04,  6.4812e-03, -9.5546e-05,  ...,  3.8776e-03,
          5.8699e-04,  6.6185e-03],
        [-1.0101e-02, -7.1487e-03, -7.3624e-03,  ...,  2.1725e-03,
          5.9776e-03,  2.8610e-03],
        [-8.5545e-04, -5.9052e-03, -2.5578e-03,  ...,  1.3790e-03,
         -7.6218e-03,  2.7275e-04],
        ...,
        [ 3.3092e-03,  4.1084e-03, -1.4448e-03,  ...,  8.0032e-03,
         -1.2693e-03,  8.5678e-03],
        [-1.9956e-04, -2.7065e-03, -5.9166e-03,  ..., -5.1041e-03,
         -3.0918e-03, -8.0185e-03],
        [-3.4218e-03,  2.3174e-03, -4.1237e-03,  ...,  4.3144e-03,
         -4.2152e-03,  1.8787e-03]], dtype=torch.float16)), ('layers.22.mlp.dense_4h_to_h.bias', tensor([-0.0024, -0.0014,  0.0024,  ..., -0.0055, -0.0013,  0.0041],
       dtype=torch.float16)), ('layers.23.input_layernorm.weight', tensor([0.9849, 0.9883, 0.9917,  ..., 0.9907, 0.9883, 1.0049],
       dtype=torch.float16)), ('layers.23.input_layernorm.bias', tensor([-0.0013, -0.0041, -0.0005,  ...,  0.0049, -0.0006, -0.0030],
       dtype=torch.float16)), ('layers.23.self_attention.query_key_value.weight', tensor([[ 0.0170,  0.0161,  0.0110,  ...,  0.0155, -0.0063,  0.0104],
        [-0.0111,  0.0134,  0.0186,  ..., -0.0195, -0.0113, -0.0184],
        [-0.0233, -0.0073,  0.0213,  ...,  0.0009,  0.0486, -0.0399],
        ...,
        [-0.0209,  0.0091,  0.0032,  ...,  0.0029,  0.0088,  0.0169],
        [ 0.0127,  0.0307, -0.0313,  ...,  0.0035,  0.0113,  0.0061],
        [-0.0027, -0.0167, -0.0370,  ..., -0.0099, -0.0064, -0.0007]],
       dtype=torch.float16)), ('layers.23.self_attention.query_key_value.bias', tensor([-7.5758e-05,  2.7409e-03,  1.2560e-03,  ...,  1.5430e-03,
         8.6641e-04,  1.1319e-04], dtype=torch.float16)), ('layers.23.self_attention.gaussian_weight.sigma', tensor([1.0684], dtype=torch.float16)), ('layers.23.self_attention.dense.weight', tensor([[ 5.1842e-03,  1.4477e-03, -1.4839e-03,  ..., -8.0032e-03,
         -1.0414e-03,  5.2910e-03],
        [-6.7368e-03, -1.0063e-02,  6.3591e-03,  ..., -9.4771e-05,
          2.1133e-03, -3.4094e-04],
        [-6.3753e-04, -4.5815e-03,  9.7096e-05,  ...,  6.0997e-03,
         -4.4060e-03, -6.0883e-03],
        ...,
        [ 2.3136e-03,  1.7529e-03, -5.2528e-03,  ..., -1.5173e-03,
         -3.8128e-03,  1.8444e-03],
        [-1.4830e-03, -2.5063e-03, -1.0078e-02,  ..., -3.3588e-03,
          6.0539e-03, -1.8740e-04],
        [-3.9406e-03,  8.0109e-04, -6.1340e-03,  ..., -3.8643e-03,
         -1.2884e-03, -2.4605e-03]], dtype=torch.float16)), ('layers.23.self_attention.dense.bias', tensor([-2.3556e-03, -2.3663e-05,  4.1885e-03,  ..., -6.1646e-03,
        -2.3861e-03,  5.5885e-03], dtype=torch.float16)), ('layers.23.post_attention_layernorm.weight', tensor([1.0088, 0.9951, 0.9927,  ..., 1.0098, 1.0000, 1.0068],
       dtype=torch.float16)), ('layers.23.post_attention_layernorm.bias', tensor([ 0.0043,  0.0020,  0.0019,  ..., -0.0018,  0.0009,  0.0006],
       dtype=torch.float16)), ('layers.23.mlp.dense_h_to_4h.weight', tensor([[ 0.0033,  0.0067, -0.0279,  ...,  0.0076,  0.0138, -0.0116],
        [-0.0107, -0.0115, -0.0082,  ...,  0.0173, -0.0341,  0.0214],
        [-0.0030, -0.0377, -0.0058,  ...,  0.0157, -0.0183,  0.0027],
        ...,
        [-0.0018,  0.0270,  0.0334,  ...,  0.0097, -0.0118, -0.0055],
        [-0.0187,  0.0024,  0.0044,  ...,  0.0041, -0.0295,  0.0264],
        [ 0.0208,  0.0338, -0.0113,  ...,  0.0239,  0.0141, -0.0368]],
       dtype=torch.float16)), ('layers.23.mlp.dense_h_to_4h.bias', tensor([ 0.0005, -0.0049, -0.0019,  ..., -0.0039, -0.0047, -0.0062],
       dtype=torch.float16)), ('layers.23.mlp.dense_4h_to_h.weight', tensor([[ 0.0020, -0.0040, -0.0025,  ...,  0.0035,  0.0087,  0.0009],
        [-0.0008, -0.0027, -0.0045,  ..., -0.0090,  0.0028, -0.0012],
        [ 0.0002, -0.0026, -0.0018,  ...,  0.0037, -0.0009,  0.0009],
        ...,
        [-0.0026, -0.0005, -0.0008,  ...,  0.0033,  0.0089,  0.0048],
        [-0.0011, -0.0026,  0.0022,  ..., -0.0069,  0.0007, -0.0007],
        [ 0.0017, -0.0029, -0.0067,  ..., -0.0028, -0.0053, -0.0109]],
       dtype=torch.float16)), ('layers.23.mlp.dense_4h_to_h.bias', tensor([-0.0038,  0.0002,  0.0016,  ..., -0.0043, -0.0011,  0.0040],
       dtype=torch.float16)), ('final_layernorm.weight', tensor([1.0039, 0.9863, 0.9819,  ..., 0.9858, 1.0020, 0.9854],
       dtype=torch.float16)), ('final_layernorm.bias', tensor([-0.0225, -0.0163,  0.0011,  ..., -0.0160, -0.0230,  0.0198],
       dtype=torch.float16))])}, 'lm_head': OrderedDict([('dense.weight', tensor([[ 3.1013e-03, -7.4081e-03,  1.7532e-02,  ...,  6.5079e-03,
         -5.4693e-04, -1.0864e-02],
        [-1.0574e-02, -1.5717e-02, -8.4043e-06,  ..., -1.8784e-02,
          2.1915e-03, -1.1566e-02],
        [-9.0179e-03,  3.9581e-02,  6.7871e-02,  ..., -1.3523e-03,
         -3.5400e-02, -4.5654e-02],
        ...,
        [-1.5053e-02, -6.1131e-04,  4.6509e-02,  ..., -1.3313e-02,
          2.3849e-02, -4.4708e-02],
        [ 2.1454e-02,  3.4027e-02,  3.5357e-04,  ...,  2.8061e-02,
         -5.5695e-02,  1.0780e-02],
        [ 3.8177e-02, -6.9427e-03,  6.6299e-03,  ..., -1.6575e-03,
         -2.1072e-02,  1.1925e-02]], dtype=torch.float16)), ('dense.bias', tensor([ 0.0069,  0.0076,  0.0062,  ..., -0.0052, -0.0048,  0.0065],
       dtype=torch.float16)), ('layernorm.weight', tensor([1.0049, 1.0137, 1.0176,  ..., 0.9888, 0.9897, 1.0107],
       dtype=torch.float16)), ('layernorm.bias', tensor([-0.0022,  0.0007,  0.0049,  ...,  0.0103,  0.0096,  0.0006],
       dtype=torch.float16))])}
 checkpoint version 3.0
 > using checkpoint value 0.0001 for learning rate
 > using checkpoint value 1e-05 for minimum learning rate
 > using checkpoint value 25344.0 for warmup iterations
 > using checkpoint value 12672000 for total number of iterations
 > using checkpoint value linear for decay style
  successfully loaded checkpoint from tmp at iteration 20000
time (ms) | load-checkpoint: 29694.84
[after model, optimizer, and learning rate scheduler are built] datetime: 2021-12-17 15:09:59 
> building train, validation, and test datasets ...
 > datasets target sizes (minimum size):
    train:      25600000
    validation: 25728
    test:       128
> building train, validation, and test datasets for BERT ...
../bigdata/train-1_1.hdf5
../bigdata/train-1_1.hdf5
../bigdata/train-1_1.hdf5
../bigdata/train-1_1.hdf5
../bigdata/train-1_1.hdf5
../bigdata/train-1_1.hdf5
../bigdata/train-1_1.hdf5
../bigdata/train-1_1.hdf5
../bigdata/train-1_2.hdf5
../bigdata/train-1_2.hdf5
../bigdata/train-1_2.hdf5
../bigdata/train-1_2.hdf5
../bigdata/train-1_2.hdf5
../bigdata/train-1_2.hdf5
../bigdata/train-1_2.hdf5
../bigdata/train-1_2.hdf5
../bigdata/train-1_3.hdf5
../bigdata/train-1_3.hdf5
../bigdata/train-1_3.hdf5
../bigdata/train-1_3.hdf5
../bigdata/train-1_3.hdf5
../bigdata/train-1_3.hdf5
../bigdata/train-1_3.hdf5
../bigdata/train-1_3.hdf5
../bigdata/train-1_4.hdf5
../bigdata/train-1_4.hdf5
../bigdata/train-1_4.hdf5
../bigdata/train-1_4.hdf5
../bigdata/train-1_4.hdf5
../bigdata/train-1_4.hdf5
../bigdata/train-1_4.hdf5
../bigdata/train-1_4.hdf5
../bigdata/train-1_5.hdf5
../bigdata/train-1_5.hdf5
../bigdata/train-1_5.hdf5
../bigdata/train-1_5.hdf5
../bigdata/train-1_5.hdf5
../bigdata/train-1_5.hdf5
../bigdata/train-1_5.hdf5
../bigdata/train-1_5.hdf5
examples/tmp.sh: line 52: 11437 Killed                  python -m torch.distributed.launch $DISTRIBUTED_ARGS pretrain_gw.py --tensor-model-parallel-size 1 --pipeline-model-parallel-size 1 --num-layers 24 --hidden-size 2048 --num-attention-heads 32 --micro-batch-size 16 --global-batch-size 128 --segment-length 2048 --seq-length 31 --max-position-embeddings 31 --train-iters 200000 --save $CHECKPOINT_PATH --load $CHECKPOINT_PATH --data-path $DATA_PATH --data-impl mmap --split 949,50,1 --distributed-backend nccl --lr 0.0001 --lr-decay-style linear --min-lr 1.0e-5 --lr-decay-iters 99000 --weight-decay 1e-2 --clip-grad 1.0 --lr-warmup-fraction .002 --log-interval 100 --save-interval 10000 --eval-interval 1000 --eval-iters 1 --dataloader-type cyclic --fp16 --bert-no-binary-head
